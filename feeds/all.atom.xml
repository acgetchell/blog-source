<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Adam's Entropy</title><link href="http://adamgetchell.org/" rel="alternate"></link><link href="http://adamgetchell.org/feeds/all.atom.xml" rel="self"></link><id>http://adamgetchell.org/</id><updated>2016-04-17T00:00:00-07:00</updated><entry><title>Atom vs. CLion</title><link href="http://adamgetchell.org/atom-vs-clion.html" rel="alternate"></link><updated>2016-04-17T00:00:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2016-04-17:atom-vs-clion.html</id><summary type="html">&lt;p&gt;So today I decided to give &lt;a href="https://www.jetbrains.com/clion/"&gt;CLion&lt;/a&gt; a try. After all, I need all the help I
can&amp;nbsp;get.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://atom.io"&gt;Atom&lt;/a&gt; is very nice, and I&amp;#8217;ve been using it since 0.1 for everything from
&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;ing papers to writing this blog to everyday coding in C++. However, my
latest travails involve heavy use of the &lt;a href="http://lldb.llvm.org"&gt;debugger&lt;/a&gt;, and doing that on the
command line is not so nice. So I was lured in with the promise of a nice,
graphical debugger in an honest &lt;span class="caps"&gt;IDE&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;After tinkering around with it for an hour or so, and trawling through the
forums, I&amp;#8217;ve managed to get CLion to look very close to my Atom setup. Except
for the different colors used in syntax highlighting, but I&amp;#8217;ll get used to that,
or I can always customize the color scheme to Atom&amp;#8217;s material syntax if it
really bothers&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;So, here are the Pros and&amp;nbsp;Cons.&lt;/p&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code completion is&amp;nbsp;nice&lt;/li&gt;
&lt;li&gt;Refactoring is&amp;nbsp;wonderful&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s really nice to be working with a tool that understands the C++
constructs, instead of just doing some clever pattern&amp;nbsp;matching&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No option to use &lt;a href="https://ninja-build.org"&gt;Ninja&lt;/a&gt; as my build tool. This increases build times&amp;nbsp;perceptibly&lt;/li&gt;
&lt;li&gt;Inexplicably builds in some hidden directory instead of the output directory
(but see the &lt;a href="https://blog.jetbrains.com/clion/2016/03/clion-2016-2-roadmap/"&gt;roadmap for 2016.2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The debugger skips right past my set&amp;nbsp;breakpoints&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sadly, that last one is pretty much a&amp;nbsp;dealbreaker.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve submitted a support request, and I really think that CLion 2016.2 looks
very&amp;nbsp;promising.&lt;/p&gt;
&lt;p&gt;But as of now I&amp;#8217;ll still be writing in&amp;nbsp;Atom.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="c++"></category></entry><entry><title>Jerusalem 2014-15</title><link href="http://adamgetchell.org/jerusalem-2014-15.html" rel="alternate"></link><updated>2014-12-31T13:26:46+02:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2014-12-31:jerusalem-2014-15.html</id><summary type="html">&lt;p&gt;And again, it&amp;#8217;s been quite&amp;nbsp;awhile.&lt;/p&gt;
&lt;p&gt;The big news is the welcome addition of Benjamin to our family. You can see him studying with me in my profile picture. He&amp;#8217;s an incredible ball of energy and joy, and there&amp;#8217;s nothing like having him around to remind one of the meaning of&amp;nbsp;life.&lt;/p&gt;
&lt;p&gt;Aside from that, and with Benjamin&amp;#8217;s encouragement, I&amp;#8217;ve been busy the past year getting serious about doing my research. &lt;a href="http://collaborate.mozillascience.org/projects/quantumGravity"&gt;My project&lt;/a&gt; was recently accepted by the &lt;a href="http://collaborate.mozillascience.org/projects/quantumGravity"&gt;Mozilla Science Lab&lt;/a&gt;, a really cool effort which aims to harness open-source software towards basic research. This is a part of a general movement, along with &amp;#8220;new&amp;#8221; trends such as &lt;a href="http://software-carpentry.org"&gt;Software Carpentry&lt;/a&gt; and &lt;a href="https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century/"&gt;Data Science&lt;/a&gt; (themselves based on practices and techniques from &lt;a href="http://www.sei.cmu.edu"&gt;Software Engineering&lt;/a&gt;, &lt;a href="http://www.agilemanifesto.org"&gt;Agile Development&lt;/a&gt;, and &lt;a href="http://nosql-database.org"&gt;NoSQL&lt;/a&gt; to name just a&amp;nbsp;few).&lt;/p&gt;
&lt;p&gt;However, as I type this I am sitting here at &lt;a href="http://new.huji.ac.il"&gt;Hebrew University&lt;/a&gt;, in sunny (but chilly, at least by a Californian&amp;#8217;s standards) Jerusalem attending the &lt;a href="http://www.as.huji.ac.il/schools/phys32"&gt;32nd Winter School in Theoretical Physics on 100 Years of General Relativity: From Theory to Experiment and Back&lt;/a&gt;. I&amp;#8217;m having a blast getting my brain filled! I will post more about what I&amp;#8217;ve learned&amp;nbsp;later.&lt;/p&gt;
&lt;p&gt;&lt;img alt="IIAS" src="images/IIAS.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;(Benjamin is already quite the world traveler, handling planes, trains, and sightseeing with&amp;nbsp;aplomb.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Benjamin on a plane" src="images/ben_plane.jpg" /&gt;
&lt;img alt="Benjamin on the Jerusalem light rail" src="images/ben_train.jpg" /&gt;
&lt;img alt="Us at the Wailing Wall" src="images/wailing_wall.jpg" /&gt;
&lt;img alt="Golgotha" src="images/golgotha.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Also, I&amp;#8217;ve migrated from Octopress to Pelican, as &lt;a href="https://jakevdp.github.io/blog/2013/05/07/migrating-from-octopress-to-pelican/"&gt;others have done&lt;/a&gt;, for similar reasons. &lt;a href="http://code.mumak.net/2014/07/migrated-to-pelican.html"&gt;This post&lt;/a&gt; was very helpful in doing the conversion, especially the Blogger support added into pelican-import.py. &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;This post&lt;/a&gt; helped with the GitHub pages&amp;nbsp;support.&lt;/p&gt;
&lt;p&gt;Shalom and Happy New&amp;nbsp;Year!&lt;/p&gt;</summary><category term="travel"></category><category term="pelican"></category></entry><entry><title>Iterations</title><link href="http://adamgetchell.org/iterations.html" rel="alternate"></link><updated>2013-12-07T18:56:50-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2013-12-07:iterations.html</id><summary type="html">&lt;p&gt;It&amp;#8217;s been quite awhile since the last post, with lots of changes.&amp;nbsp;I&amp;#8217;ve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Converted to&amp;nbsp;MacOS&lt;/li&gt;
&lt;li&gt;Changed my research codebase to&amp;nbsp;C++&lt;/li&gt;
&lt;li&gt;Migrated this blog from Blogger to&amp;nbsp;Octopress&lt;/li&gt;
&lt;li&gt;Started on the path towards &lt;a href="https://app.net/search/?type=posts&amp;amp;q=%23prismbreak"&gt;#prismbreak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gotten my blue belt in &lt;span class="caps"&gt;BJJ&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;ll say a little about each of these in&amp;nbsp;turn.&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;MacOS++&lt;/h2&gt;
&lt;p&gt;First, for scientific research MacOS &amp;lt;&amp;nbsp;(Windows)++.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve tried both, I simply get more done in MacOS. Mainly, it&amp;#8217;s because there&amp;#8217;s generations of Unix tools I can still use in an honest bash shell. &lt;a href="https://github.com/technicalpickles/homesick"&gt;Homesick&lt;/a&gt; is simply lovely for managing your dotfiles, and &lt;a href="https://github.com/revans/bash-it"&gt;bash-it&lt;/a&gt; is another awesome shell configuration management tool. I pretty much live in &lt;a href="https://github.com/acgetchell"&gt;GitHub&lt;/a&gt; for anything public (research papers and code, presentations, work projects, and this blog) and with tools like &lt;a href="https://github.com/mxcl/homebrew"&gt;Homebrew&lt;/a&gt; I can restore my development environment and files on any Mac I care to just by running a shell&amp;nbsp;script.&lt;/p&gt;
&lt;p&gt;Second, any large complex pieces of software that I find worth purchasing such as Mathematica, Maple, Office, MindNode Pro, Parallels, &lt;a href="http://www.sublimetext.com"&gt;SublimeText&lt;/a&gt;, or &lt;a href="https://agilebits.com/onepassword"&gt;1Password&lt;/a&gt; already runs fine on MacOS. As do myriads of other useful free or open source tools such as (let me look at my Dock) &lt;a href="https://www.google.com/intl/en/chrome/browser/"&gt;Chrome&lt;/a&gt;, &lt;a href="https://www.torproject.org"&gt;Tor&lt;/a&gt;, &lt;a href="http://kapeli.com/dash"&gt;DashDoc&lt;/a&gt;, &lt;a href="http://mac.github.com"&gt;GitHub&lt;/a&gt;, &lt;a href="http://www.lighttable.com"&gt;LightTable&lt;/a&gt;, &lt;a href="https://evernote.com"&gt;EverNote&lt;/a&gt;, &lt;a href="https://www.zotero.org"&gt;Zotero&lt;/a&gt;, &lt;a href="http://ankisrs.net"&gt;Anki&lt;/a&gt;, and &lt;a href="http://www.truecrypt.org"&gt;TrueCrypt&lt;/a&gt;. And then there&amp;#8217;s the software Apple bundles such as XCode, iTunes, iMessage, iWork, iMovie, and Garage band. Let&amp;#8217;s not forget that any non-console games I care about work great on &lt;a href="http://us.battle.net/en/"&gt;Battle.Net&lt;/a&gt; or &lt;a href="http://store.steampowered.com"&gt;Steam&lt;/a&gt;. Or that the AppStore keeps paid apps in the cloud, and Homebrew/Homesick keeps the rest. Finally, if there are any Windows tools I absolutely have to have such as &lt;a href="http://www.visualstudio.com"&gt;Visual Studio&lt;/a&gt; or modern versions of Outlook, &lt;a href="http://www.parallels.com"&gt;Parallels&lt;/a&gt; works&amp;nbsp;dandy.&lt;/p&gt;
&lt;p&gt;Now, putting on my &lt;span class="caps"&gt;IT&lt;/span&gt; hat for a moment, if you are in a corporate environment and don&amp;#8217;t care one whit about the command line, then Windows is the best for you. Or rather, you&amp;#8217;re probably indifferent (although you may want &lt;em&gt;teh shiny&lt;/em&gt;), but for your tech staff, Windows machines can be managed by the thousands with relative ease. Microsoft actually supports doing so in an efficient business fashion. Apple simply doesn&amp;#8217;t care about the enterprise space, and &lt;a href="https://www.usenix.org/conference/lisa13/managing-macs-google-scale"&gt;Google&amp;#8217;s&lt;/a&gt; &lt;a href="https://code.google.com/p/google-macops/"&gt;toolkit&lt;/a&gt; doesn&amp;#8217;t quite fill in the gaps (although I am sure that &lt;a href="https://puppetlabs.com"&gt;Puppet&lt;/a&gt; masters will disagree with&amp;nbsp;me).&lt;/p&gt;
&lt;p&gt;Also, if you live in &lt;a href="http://www.windowsazure.com/en-us/"&gt;Azure&lt;/a&gt; or Visual Studio or like the &lt;a href="http://www.microsoft.com/surface/en-us"&gt;Surface&lt;/a&gt; hardware (and they are interesting) Windows has got it going (although some of us just buy Macs and load Windows, because the hardware is still &lt;a href="http://www.apple.com/mac/"&gt;shiny&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It goes without saying that if you&amp;#8217;re one of those folks that love rolling your own &lt;span class="caps"&gt;OS&lt;/span&gt; and hardware, Linux is for you. Most of us, I suspect, simply need to get things done. Hence the resurgence in MacOS&amp;nbsp;share.&lt;/p&gt;
&lt;h2&gt;C++&lt;/h2&gt;
&lt;p&gt;Some of you may remember that I&amp;#8217;m working on &lt;a href="http://arxiv.org/abs/hep-th/0105267"&gt;quantum gravity&lt;/a&gt;. Now it turns out that for the kinds of things I want to do &amp;#8212; construct simplicial manifolds by the thousands and manipulate their geometry to insert masses and other objects; then read off the various attributes of these spacetimes and the objects therein &amp;#8212; I am going very far down a very deep rabbit hole named &lt;a href="http://en.wikipedia.org/wiki/Computational_geometry"&gt;computational geometry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But lo, there was light and illumination in the dark tunnels of my madness, and its name is &lt;a href="http://www.cgal.org"&gt;&lt;span class="caps"&gt;CGAL&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And &lt;span class="caps"&gt;CGAL&lt;/span&gt; is written in &lt;a href="http://isocpp.org"&gt;C++&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(Oh, sure, there are &lt;a href="https://code.google.com/p/cgal-bindings/"&gt;Python bindings&lt;/a&gt; too. But they don&amp;#8217;t cover everything, and I haven&amp;#8217;t tested all of their&amp;nbsp;functions.)&lt;/p&gt;
&lt;p&gt;But now that I&amp;#8217;m down one rabbit hole, I may as well continue, and I&amp;#8217;ve found much to my surprise I am enjoying &lt;a href="http://www.cprogramming.com"&gt;re-learning&lt;/a&gt; and using C++. Luckily for me, the C++11 standard is here, and C++ really does feel like another language. &lt;span class="caps"&gt;CGAL&lt;/span&gt; makes fundamental use of generic programming, and the toolchain has gotten better too. With &lt;span class="caps"&gt;CGAL&lt;/span&gt;, C++, &lt;a href="http://www.cmake.org"&gt;CMake&lt;/a&gt;, &lt;a href="http://www.stack.nl/~dimitri/doxygen/"&gt;Doxygen&lt;/a&gt; and friends I am &lt;a href="http://www.literateprogramming.com"&gt;literate-ly&lt;/a&gt; &lt;a href="http://pragprog.com/book/lotdd/modern-c-programming-with-test-driven-development"&gt;test-kinda-driven developing&lt;/a&gt; my way for great&amp;nbsp;good.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://clojure.org"&gt;Clojure&lt;/a&gt; and &lt;a href="http://www.sbcl.org"&gt;Lisp&lt;/a&gt; are still lovely. But I can generate 5 million simplex complexes in 10-50 seconds on just my laptop, and if there ever was a need for speed and parallelization I have it. (Ah, &lt;a href="http://julialang.org"&gt;julia&lt;/a&gt;, you are a lovely language, Y U No compile on MacOS?) And maybe someday we&amp;#8217;ll have Quantum Gravity on your Desktop courtesy of &lt;a href="http://boinc.berkeley.edu"&gt;&lt;span class="caps"&gt;BOINC&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Octopress++&lt;/h2&gt;
&lt;p&gt;I &lt;a href="http://toamitkumar.com/blog/2012/04/19/migrate-from-blogger-to-octopress-step-by-step-guide/"&gt;moved from Blogger&lt;/a&gt; to &lt;a href="http://octopress.org"&gt;Octopress&lt;/a&gt; for a number of&amp;nbsp;reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Octopress is open source, works using git, and works well on GitHub. There are a ton of &lt;a href="http://octopress.org/docs/plugins/"&gt;plug-ins&lt;/a&gt; and it&amp;#8217;s easy to write your&amp;nbsp;own.&lt;/li&gt;
&lt;li&gt;I want to &lt;a href="https://eschnou.com/entry/implementing-prism-break-62-25013.html"&gt;reclaim my network identity&lt;/a&gt;, and a platform that I can regenerate anyplace with just a &lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mirroring the move to C++, this blog is written very infrequently but read, well more often than it is written. So the overhead of a database and a dynamic site is not worth&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;Did I mention it works in git and GitHub? I live there these days. And the &lt;a href="https://github.com/revans/bash-it/blob/master/aliases/available/git.aliases.bash"&gt;bash-it git aliases&lt;/a&gt;&amp;nbsp;rock!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rake preview&lt;/code&gt; &lt;code&gt;rake generate&lt;/code&gt; &lt;code&gt;rake deploy&lt;/code&gt; then &lt;code&gt;gall&lt;/code&gt; &lt;code&gt;gca&lt;/code&gt; &lt;code&gt;gpo source&lt;/code&gt; is a lovely&amp;nbsp;workflow.&lt;/li&gt;
&lt;li&gt;Lot&amp;#8217;s of &lt;a href="http://www.lucypark.kr/blog/2013/02/25/mathjax-kramdown-and-octopress/"&gt;resources&lt;/a&gt; &lt;a href="http://jekyllrb.com"&gt;to&lt;/a&gt; &lt;a href="https://github.com/robertkowalski/octopress-coderwall"&gt;get&lt;/a&gt; &lt;a href="http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-about-page/"&gt;going&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Prismbreak++&lt;/h2&gt;
&lt;p&gt;We &lt;a href="https://www.aclu.org/technology-and-liberty/internet-privacy"&gt;all&lt;/a&gt; &lt;a href="https://www.eff.org/nsa-spying"&gt;kinda&lt;/a&gt; &lt;a href="http://www.foxnews.com/politics/2013/11/19/docs-say-nsa-repeatedly-assured-court-it-would-stop-surveillance-rules"&gt;knew&lt;/a&gt; &lt;a href="http://www.wired.com/threatlevel/2012/03/ff_nsadatacenter/"&gt;it&lt;/a&gt;. The internet is a vast info-trawl for almost anything, but especially &lt;a href="http://lifehacker.com/5697167/if-youre-not-paying-for-it-youre-the-product"&gt;all the private info people are trading away for services&lt;/a&gt;. Getting your own independent network identity is just the &lt;a href="https://prism-break.org"&gt;first step&lt;/a&gt;, but there are many, many others (such as using &lt;a href="http://www.truecrypt.org"&gt;TrueCrypt&lt;/a&gt; for any cloud file storage on any files you care to keep private). There are also quite a few inconviences; after all there&amp;#8217;s a reason folks use the privacy-invading &amp;#8220;&lt;a href="http://lifehacker.com/5697167/if-youre-not-paying-for-it-youre-the-product"&gt;free&lt;/a&gt;&amp;#8221; services, and no I don&amp;#8217;t want Linux for my primary laptop. I&amp;#8217;ll (possibly) have more to say on this&amp;nbsp;later.&lt;/p&gt;
&lt;p&gt;(If you &lt;em&gt;are&lt;/em&gt; going to pick an operating system for privacy, the best choice is &lt;a href="http://www.openbsd.org"&gt;OpenBSD&lt;/a&gt;.)&lt;/p&gt;
&lt;h2&gt;Martial&amp;nbsp;Arts++&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;ve been practicing martial arts of various types for quite awhile now. I&amp;#8217;m fairly highly ranked in a&amp;nbsp;few.&lt;/p&gt;
&lt;p&gt;But the empirical evidence is in, and it is&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;To fight effectively, you need awareness, strength, quickness, toughness, calmness, cardio, and a whole host of attributes often listed on &lt;span class="caps"&gt;RPG&lt;/span&gt; sheets. To which skill in striking, grappling, and on the ground are&amp;nbsp;musts.&lt;/p&gt;
&lt;p&gt;I love Taekwondo and it&amp;#8217;s spin kicks, but I am not deluding myself. You simply don&amp;#8217;t learn to deal with most other forms of striking. You will have beautiful kicks, but someone with a few months of boxing will punch you in the face quite easily. And of course, any type of grappler that closes the distance (or, anytime you miss) will grab hold of you to your&amp;nbsp;detriment.&lt;/p&gt;
&lt;p&gt;I learned Judo and love the throws, but I&amp;#8217;d rate it below Wrestling and Sambo in effectiveness. Primarily due to the new rules changes which forbid wrestling-style double and single leg&amp;nbsp;takedowns.&lt;/p&gt;
&lt;p&gt;And on the ground, of course, Brazilian Jiu-Jitsu is&amp;nbsp;king.&lt;/p&gt;
&lt;p&gt;All of these statements are pretty easily tested. You can personally test it by going to boxing clubs, wrestling workouts, and &lt;span class="caps"&gt;BJJ&lt;/span&gt; gyms and see how you fare in these areas. Or you can just watch &lt;span class="caps"&gt;UFC&lt;/span&gt; and see professionals do the&amp;nbsp;same.&lt;/p&gt;
&lt;p&gt;And if you object that all of these places have rules, and aren&amp;#8217;t a real fight: please tell me why you think various dirty tricks will win the day for you, especially when you&amp;#8217;re in an inferior position where your opponent can do the same back to you (but 10x&amp;nbsp;worse).&lt;/p&gt;
&lt;p&gt;I teach Hapkido at the university, and I&amp;#8217;ve always enjoyed that Hapkidoja &lt;em&gt;did&lt;/em&gt; learn techniques in all of these areas. I competed in Taekwondo and Judo, and Hapkido synthesized them all together. It was good for practical self-defense. I try to teach it as&amp;nbsp;such.&lt;/p&gt;
&lt;p&gt;(Yes, martial arts with sporting equivalents are superior. Nothing beats realistic&amp;nbsp;practice.)&lt;/p&gt;
&lt;p&gt;But times change and things develop, and it&amp;#8217;s time to adapt and learn what works. And my &lt;a href="http://fabiopradobjj.com"&gt;&lt;span class="caps"&gt;BJJ&lt;/span&gt; academy&lt;/a&gt;, &lt;a href="http://fabiopradobjj.com/about-fabio-prad0/"&gt;professor&lt;/a&gt;, and jiu-jitsu family&amp;nbsp;rock!&lt;/p&gt;
&lt;p&gt;Also, competing in &lt;span class="caps"&gt;BJJ&lt;/span&gt; is scary&amp;nbsp;fun!&lt;/p&gt;</summary><category term="macos"></category><category term="c++"></category><category term="octopress"></category><category term="prismbreak"></category><category term="bjj"></category></entry><entry><title>General Relativity flash-cards using Anki</title><link href="http://adamgetchell.org/general-relativity-flash-cards-using.html" rel="alternate"></link><updated>2013-10-24T05:52:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2013-10-24:general-relativity-flash-cards-using.html</id><summary type="html">&lt;p&gt;&lt;a href="http://ankisrs.net/"&gt;Anki&lt;/a&gt; is a neat &lt;a href="http://www.supermemo.com/english/ol/background.htm"&gt;spaced repetition
system&lt;/a&gt; that allows
you to maximize memorization efficiency, or something like that.
Interestingly, I came across it on the &lt;a href="http://groups.google.com/group/clojure"&gt;Clojure
group&lt;/a&gt;, and there are already
&lt;a href="http://blog.milehighcode.com/2012/01/use-you-spaced-repetition-system-for.html"&gt;decks available for learning
Clojure&lt;/a&gt;.
It accepts LaTeX, so I&amp;#8217;ve decided to make a flash-deck of some handy
formulas that pop up in General Relativity, because there&amp;#8217;s enough to
learn without&amp;nbsp;forgetting!  &lt;/p&gt;
&lt;p&gt;(Also, it&amp;#8217;s handy to have LaTeX snippets someplace&amp;nbsp;semi-permanent.)  &lt;/p&gt;
&lt;p&gt;Bianchi&amp;nbsp;identity:  &lt;/p&gt;
&lt;div class="math"&gt;$$\nabla_{[\lambda}R_{\rho\sigma]\mu\nu}=0$$&lt;/div&gt;
&lt;p&gt;Christoffel&amp;nbsp;symbol:  &lt;/p&gt;
&lt;div class="math"&gt;$$\Gamma_{\mu\nu}^{\lambda}=\frac{1}{2}g^{\lambda\sigma}\left(\partial_{\mu}g_{\nu\sigma}+\partial_{\nu}g_{\sigma\mu}-\partial_{\sigma}g_{\mu\nu}\right)$$&lt;/div&gt;
&lt;p&gt;Covariant derivative of a&amp;nbsp;1-form:  &lt;/p&gt;
&lt;div class="math"&gt;$$\nabla_{\mu}\omega_{\nu}=\partial_{\mu}\omega_{\nu}-\Gamma_{\mu\nu}^{\lambda}\omega_{\lambda}$$&lt;/div&gt;
&lt;p&gt;Covariant derivative of a&amp;nbsp;vector:  &lt;/p&gt;
&lt;div class="math"&gt;$$\nabla_{\mu}V^{\nu}=\partial_{\mu}V^{\nu}+\Gamma_{\mu\lambda}^{\nu}V^{\lambda}$$&lt;/div&gt;
&lt;p&gt;Covariant form of Maxwell&amp;#8217;s&amp;nbsp;equations:&lt;/p&gt;
&lt;div class="math"&gt;$$\partial_{\mu}F^{\nu\mu}=J^{\nu}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\partial_{[\mu}F_{\nu\lambda]}=0$$&lt;/div&gt;
&lt;p&gt;for  &lt;/p&gt;
&lt;div class="math"&gt;$$J^{\nu}=\left(\rho,J^{x},J^{y},J^{z}\right)$$&lt;/div&gt;
&lt;p&gt;and  &lt;/p&gt;
&lt;div class="math"&gt;$$F_{\mu\nu}=\left(
\begin{array}{cccc}  
0 &amp;amp; -E_{1} &amp;amp; -E_{2} &amp;amp; -E_{3} \\  
E_{1} &amp;amp; 0 &amp;amp; B_{3} &amp;amp; -B_{2} \\  
E_{2} &amp;amp; -B_{3} &amp;amp; 0 &amp;amp; B_{1} \\  
E_{3} &amp;amp; B_{2} &amp;amp; -B_{1} &amp;amp; 0  \\
\end{array}
\right)$$&lt;/div&gt;
&lt;p&gt;Riemann&amp;nbsp;tensor:  &lt;/p&gt;
&lt;div class="math"&gt;$$R_{\sigma\mu\nu}^{\rho}=\partial_{\mu}\Gamma_{\nu\sigma}^{\rho}-\partial_{\nu}\Gamma_{\mu\sigma}^{\rho}+\Gamma_{\mu\lambda}^{\rho}\Gamma_{\nu\sigma}^{\lambda}-\Gamma_{\nu\lambda}^{\rho}\Gamma_{\mu\sigma}^{\lambda}$$&lt;/div&gt;
&lt;p&gt;Properties of the Riemann&amp;nbsp;tensor:  &lt;/p&gt;
&lt;div class="math"&gt;$$R_{\rho\sigma\mu\nu}=-R_{\sigma\rho\mu\nu}$$&lt;/div&gt;
&lt;div class="math"&gt;$$R_{\rho\sigma\mu\nu}=-R_{\sigma\rho\nu\mu}$$&lt;/div&gt;
&lt;div class="math"&gt;$$R_{\rho\sigma\mu\nu}=R_{\mu\nu\rho\sigma}$$&lt;/div&gt;
&lt;div class="math"&gt;$$R_{\rho[\sigma\mu\nu]}=0$$&lt;/div&gt;
&lt;p&gt;Ricci&amp;nbsp;tensor:  &lt;/p&gt;
&lt;div class="math"&gt;$$R_{\mu\nu}=R_{\mu\lambda\nu}^{\lambda}$$&lt;/div&gt;
&lt;p&gt;Ricci&amp;nbsp;scalar:  &lt;/p&gt;
&lt;div class="math"&gt;$$R=R_{\mu}^{\mu}=g^{\mu\nu}R_{\mu\nu}$$&lt;/div&gt;
&lt;p&gt;Einstein&amp;nbsp;tensor:  &lt;/p&gt;
&lt;div class="math"&gt;$$G_{\mu\nu}=R_{\mu\nu}-\frac{1}{2}Rg_{\mu\nu}$$&lt;/div&gt;
&lt;p&gt;Formulae from Sean Carroll&amp;#8217;s &lt;em&gt;&lt;a href="http://preposterousuniverse.com/spacetimeandgeometry/"&gt;Spacetime and Geometry: An Introduction
to General&amp;nbsp;Relativity&lt;/a&gt;&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;Anki synchronizes with DropBox, but it&amp;#8217;s &lt;a href="http://ankisrs.net/docs/SyncingMedia.html"&gt;a bit
involved&lt;/a&gt;. When I get my deck
synchronized and uploaded, I will post a link to&amp;nbsp;it.  &lt;/p&gt;
&lt;p&gt;Update: &lt;a href="https://ankiweb.net/shared/info/1777635479"&gt;https://ankiweb.net/shared/info/1777635479&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="general relativity"></category></entry><entry><title>Feynman diagrams in LaTeX</title><link href="http://adamgetchell.org/feynman-diagrams-in-latex.html" rel="alternate"></link><updated>2012-09-02T09:15:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2012-09-02:feynman-diagrams-in-latex.html</id><summary type="html">&lt;p&gt;Sometimes you need Feynman diagrams in papers. It turns out there are
quite a few ways to get there, but the handiest is FeynMP. I&amp;#8217;m using, in
particular, MikTeX and TeXMaker, but something like this should work for
other setups. Here are the&amp;nbsp;steps:  &lt;/p&gt;
&lt;p&gt;First, get the &lt;strong&gt;feynmf&lt;/strong&gt; package from your package&amp;nbsp;manager.&lt;/p&gt;
&lt;p&gt;&lt;img alt="MiKTeX" src="images/MiKTeX.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;Next, add the following to your &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; preamble: I know the package
name says &lt;strong&gt;feynmp&lt;/strong&gt;; if you use that, you&amp;#8217;ll have a lot more errors.
The feynmp package is nicer, and included when you install&amp;nbsp;feynmf.&lt;/p&gt;
&lt;p&gt;[gist:id=3595449,file=feynmp-preamble.tex]  &lt;/p&gt;
&lt;p&gt;Now, let&amp;#8217;s say you want to add a diagram for Compton scattering (the
point of the whole exercise). I suggest wrapping it in a &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;
figure for convenience; doing so will lead to something like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/3595628.js?file=compton.tex'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;\begin{figure}
	\centering
	\begin{fmffile}{compton}
		\begin{fmfgraph*}(80,50)
			\fmfleft{i1,i2}
			\fmfright{o1,o2}

			\fmflabel{$\gamma$}{i2}
			\fmflabel{$e^-$}{i1}
			\fmflabel{$\gamma$}{o1}
			\fmflabel{$e^-$}{o2}

			\fmf{photon}{i2,v2}
			\fmf{fermion}{i1,v1,v2,o2}
			\fmf{photon}{v1,o1}
		\end{fmfgraph*}
	\end{fmffile}

	\caption[Compton Scattering]{Feynman diagram for Compton scattering}
	\label{fig:compton-scattering}
\end{figure}&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;
&lt;p&gt;Note the name of the file is compton. In your &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; working directory,
there will be a file called compton.mp. You need to run the mpost
command on it, like&amp;nbsp;so:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="mpost" src="images/mpost.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;This generates compton.1. Now, compile your &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; (are you getting
tired of the cute capitalization yet?) file again, and your diagram will&amp;nbsp;appear!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texmaker" src="images/Texmaker.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;Note that you&amp;#8217;ll have to do this anytime you edit the figure (e.g. add
labels,&amp;nbsp;etc.)  &lt;/p&gt;
&lt;p&gt;But if you think this is a pain, try the&amp;nbsp;alternatives!  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a post that set me on the
track: &lt;a href="http://physical-thought.blogspot.com/2008/08/feynmf-feynman-diagrams-in-latex.html"&gt;http://physical-thought.blogspot.com/2008/08/feynmf-feynman-diagrams-in-latex.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s the details on getting your preamble
correct: &lt;a href="http://tex.stackexchange.com/questions/20241/how-to-use-kile-with-feynmf-or-feynmp"&gt;http://tex.stackexchange.com/questions/20241/how-to-use-kile-with-feynmf-or-feynmp&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a quick tutorial on using
feyMP: &lt;a href="http://suppiya.files.wordpress.com/2008/02/fmfsamples.pdf"&gt;http://suppiya.files.wordpress.com/2008/02/fmfsamples.pdf&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a more in-depth tutorial by Thorsten Ohl, the author of
feynMP/feynMF: &lt;a href="http://xml.web.cern.ch/XML/textproc/feynmf.html"&gt;http://xml.web.cern.ch/&lt;span class="caps"&gt;XML&lt;/span&gt;/textproc/feynmf.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a quicker tutorial by Thorsten
Ohl, &lt;a href="https://docs.google.com/viewer?url=http://www-zeus.desy.de/~kind/latex/feynmf/fmfcnl3.ps&amp;amp;pli=1"&gt;https://docs.google.com/viewer?url=http://www-zeus.desy.de/~kind/latex/feynmf/fmfcnl3.ps&amp;amp;pli=1&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;And here&amp;#8217;s the actual
manual: &lt;a href="http://www.pd.infn.it/TeX/doc/latex/feynmf/manual.pdf"&gt;http://www.pd.infn.it/TeX/doc/latex/feynmf/manual.pdf&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Also, while we&amp;#8217;re on the topic, this site had a lot of invaluable tips
for formatting math
symbols: &lt;a href="http://www.math.uiuc.edu/~hildebr/tex/displays.html"&gt;http://www.math.uiuc.edu/~hildebr/tex/displays.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;I hope this shortens the learning curve for someone else! If you have
any feedback or corrections, send notes or pull requests to the&amp;nbsp;gists.  &lt;/p&gt;
&lt;p&gt;Happy &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;-ing!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="latex"></category><category term="qft"></category></entry><entry><title>Can LIGO detect a graviton?</title><link href="http://adamgetchell.org/can-ligo-detect-graviton.html" rel="alternate"></link><updated>2011-12-28T00:09:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2011-12-28:can-ligo-detect-graviton.html</id><summary type="html">&lt;p&gt;A lecture given 10/27/08 by Professor Freeman Dyson of the Institute of
Advanced Studies at Princeton, in honor of the 100th anniversary of the
founding of the University of California,&amp;nbsp;Davis.  &lt;/p&gt;
&lt;div class="math"&gt;$$E=\left(\frac{c^{2}}{32\pi G}\right)\omega^{2}f^{2}$$&lt;/div&gt;
&lt;p&gt;
is the energy per gravity wave, where f is the dimensionless&amp;nbsp;amplitude/strain.  &lt;/p&gt;
&lt;div class="math"&gt;$$E_{s}=\frac{\hbar\omega^{4}}{c^{3}}$$&lt;/div&gt;
&lt;p&gt;
is the energy per graviton, taken from &lt;span class="math"&gt;\(\hbar\omega\)&lt;/span&gt; energy times
&lt;span class="math"&gt;\(\frac{\omega^3}{c^3}\)&lt;/span&gt;&amp;nbsp;density  &lt;/p&gt;
&lt;div class="math"&gt;$$f=\left(32\pi\right)^{\frac{1}{2}}\left(L_{p}\frac{\omega}{c}\right)$$&lt;/div&gt;
&lt;p&gt;
is the strain per&amp;nbsp;graviton.  &lt;/p&gt;
&lt;div class="math"&gt;$$L_{p}=\left(\frac{G\hbar}{c^{3}}\right)^{\frac{1}{2}}=1.4\times10^{-33}cm$$&lt;/div&gt;
&lt;div class="math"&gt;$$\delta=\left(32\pi\right)^{\frac{1}{2}}L_{p}$$&lt;/div&gt;
&lt;p&gt;
Gives the linear displacement per&amp;nbsp;graviton.  &lt;/p&gt;
&lt;p&gt;Note that spherical objects can&amp;#8217;t radiate gravitational waves, and that
binary stars produce kilohertz gravity&amp;nbsp;waves.  &lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;LIGO&lt;/span&gt;&amp;#8217;s threshold is therefore &lt;span class="math"&gt;\(10^{37}\)&lt;/span&gt;&amp;nbsp;gravitons.  &lt;/p&gt;
&lt;div class="math"&gt;$$M\delta^{2}\geq\hbar T$$&lt;/div&gt;
&lt;p&gt;
is the uncertainty in position and&amp;nbsp;velocity.  &lt;/p&gt;
&lt;div class="math"&gt;$$D\leq\left(\frac{GM}{c^{2}}\right)$$&lt;/div&gt;
&lt;p&gt;
(from combining previous two&amp;nbsp;equations)  &lt;/p&gt;
&lt;div class="math"&gt;$$\delta^{2}\geq\frac{\hbar D}{M_{s}}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{GM}{c^{2}}\geq\left(\frac{c}{s}D\right)&amp;gt;D$$&lt;/div&gt;
&lt;p&gt;
Which exceeds the Schwarzschild radius, so&amp;nbsp;impossible.  &lt;/p&gt;
&lt;p&gt;Then the Bohr-Rosenfeld argument is:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="math"&gt;$$\Delta E\_{x}(1)\Delta E_{x}(2)\approx\hbar\left|A(1,2)-A(2,1)\right|$$&lt;/div&gt;
&lt;p&gt;
where A(2,1) is the field from dipole 2 at location&amp;nbsp;1.  &lt;/p&gt;
&lt;p&gt;The detector is described by:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="math"&gt;$$D_{ab}=m\int\Psi_{b}^{*}xy\Psi_{a}d\tau$$&lt;/div&gt;
&lt;p&gt;
where a is the initial state, b is the final state, and m is the detector&amp;nbsp;mass.  &lt;/p&gt;
&lt;div class="math"&gt;$$\sigma(\omega)=\left(4\pi^{2}G\frac{\omega^{3}}{c^{3}}\right)\sum_{b}\left|D_{ab}\right|^{2}\delta(E_{b}-E_{a}-\hbar\omega)$$&lt;/div&gt;
&lt;div class="math"&gt;$$S_{a}=\int\sigma(\omega)\frac{d\omega}{\omega}$$&lt;/div&gt;
&lt;p&gt;
is the logarithmic average taken over the graviton cross&amp;nbsp;section.  &lt;/p&gt;
&lt;div class="math"&gt;$$S_{a}=4\pi^{2}L_{p}^{2}Q$$&lt;/div&gt;
&lt;p&gt;Now consider the gravitophotoelectric effect, where the graviton removes
an&amp;nbsp;electron.  &lt;/p&gt;
&lt;div class="math"&gt;$$Q=\int\left|\left(x\frac{\partial}{\partial
y}+y\frac{\partial}{\partial
x}\right)\Psi_{a}\right|^{2}d\tau$$&lt;/div&gt;
&lt;div class="math"&gt;$$Q=\frac{\int\bar{r}^{4}\left[f'(r)\right]^{2}d\bar{r}}{\int
r^{2}\left[f(r)\right]^{2}dr}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\int
r^{4}\left[f'+\left(\frac{3}{2}r\right)f\right]^{2}dr&amp;gt;0$$&lt;/div&gt;
&lt;div class="math"&gt;$$Q&amp;gt;\frac{3}{4}$$&lt;/div&gt;
&lt;div class="math"&gt;$$f(r)=r^{-n}e^{-\frac{r}{R}}$$&lt;/div&gt;
&lt;div class="math"&gt;$$Q=1-\frac{n}{6}$$&lt;/div&gt;
&lt;div class="math"&gt;$$4\pi^{2}L_{p}^{2}=4\pi^{2}G\frac{\hbar}{c^{3}}=8\times10^{-65}cm^{2}$$&lt;/div&gt;
&lt;p&gt;This means that if you take a detector the mass of the Earth, squash it
into a large flat sheet, and run it for the lifetime of the universe,
you&amp;#8217;ll detect 4&amp;nbsp;gravitons.  &lt;/p&gt;
&lt;p&gt;From the Sun, there are &lt;span class="math"&gt;\(10^{8}\)&lt;/span&gt;W of gravitons and &lt;span class="math"&gt;\(10^{25}\)&lt;/span&gt;W of
neutrinos, and we can detect gravitons about &lt;span class="math"&gt;\(10^{-35}\)&lt;/span&gt; less than&amp;nbsp;neutrinos.  &lt;/p&gt;
&lt;p&gt;Special thanks to
&lt;a href="http://www.mathjax.org/"&gt;MathJAX&lt;/a&gt; and this post on how to use &lt;a href="http://irrep.blogspot.com/2011/07/mathjax-in-blogger-ii.html"&gt;MathJax
in
Blogger&lt;/a&gt;!&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span class="caps"&gt;N.B.&lt;/span&gt; There&amp;#8217;s a good &lt;a href="http://blogs.discovermagazine.com/cosmicvariance/2009/07/05/catching-the-waves/"&gt;followup
post&lt;/a&gt;
on &lt;a href="http://blogs.discovermagazine.com/cosmicvariance/"&gt;Cosmic Variance&lt;/a&gt;,
along with an &lt;a href="http://blogs.discovermagazine.com/cosmicvariance/2007/04/25/the-difficult-childhood-of-gravitational-waves/"&gt;earlier
entry&lt;/a&gt;
giving some good background&amp;nbsp;information.&lt;/em&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="general relativity"></category></entry><entry><title>Hapkido Practicum Fall 2009</title><link href="http://adamgetchell.org/hapkido-practicum-fall-2009_29.html" rel="alternate"></link><updated>2011-12-20T07:58:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2011-12-20:hapkido-practicum-fall-2009_29.html</id><summary type="html">&lt;div style="text-align: center;"&gt;

&lt;span style="font-size: 100%;"&gt;&lt;span id="hpy."&gt;[Physical Education
Program, &lt;span class="caps"&gt;UC&lt;/span&gt;
Davis](http://pe.ucdavis.edu/Site/Welcome.html &amp;#8220;Physical Education Program, &lt;span class="caps"&gt;UC&lt;/span&gt; Davis&amp;#8221;)&lt;/span&gt;&lt;/span&gt;

&lt;/div&gt;

&lt;div style="text-align: center;"&gt;

&lt;span style="font-size: 100%;"&gt;Hapkido Practicum&lt;/span&gt;

&lt;/div&gt;

&lt;div style="text-align: center;"&gt;

&lt;span style="font-size: 100%;"&gt;Fall Quarter, 2009&lt;/span&gt;

&lt;/div&gt;

&lt;div style="text-align: center;"&gt;

&lt;span style="font-size: 100%;"&gt;Instructor: &lt;span id="ra44"&gt;[Adam
Getchell](mailto:acgetchell@ucdavis.edu &amp;#8220;Adam Getchell&amp;#8221;)&lt;/span&gt;&lt;/span&gt;

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; Techniques shown here are meant for
informative/illustrative purposes. Just because I provide a link here,
does necessarily mean I fully agree with all of the content shown. It
does mean I think there is value in some of what is being demonstrated.
As with all endeavors, a component of critical thinking is&amp;nbsp;necessary.  &lt;/p&gt;
&lt;p&gt;If something shown here works and makes sense to you, great! Practice&amp;nbsp;diligently.  &lt;/p&gt;
&lt;p&gt;If you don&amp;#8217;t understand or agree with something here, think about it,
ask questions, form your own conclusions, and adjust your training
accordingly. Martial Arts is an individual affair, albeit one with a
common set of core principles derived from physics, anatomy, psychology,
and other quantifiable&amp;nbsp;discliplines.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In a time of crisis you do not necessarily have time to&amp;nbsp;think!&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Neither should you lose your wits about you. One of the best ways to
avoid this is to know, in advance, what you are prepared to do, and
commit to doing so. If (or when) the moment comes, you have a basis for&amp;nbsp;action.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.28.09&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Discussion:
&lt;a href="https://smartsite.ucdavis.edu/portal/site/1924da01-b95f-4e91-88be-9e8e22365851/page/decb05ac-7ae1-4341-aeff-7625bfac684e"&gt;Syllabus&lt;/a&gt;&lt;br /&gt;
Warmups: Running, circling, &lt;span
id="r0jw"&gt;&lt;a href="http://www.youtube.com/watch?v=7MGljX4bbps" title="burpee"&gt;burpees&lt;/a&gt;&lt;/span&gt;,
&lt;span
id="khx1"&gt;&lt;a href="http://www.youtube.com/watch?v=k3Z5Ag9AGgY" title="Gymnastics: steps to do a cartwheel"&gt;cartwheels&lt;/a&gt;&lt;/span&gt;,
&lt;span id="sd06"&gt;&lt;a href="http://www.youtube.com/watch?v=xS6nOqP4GpQ" title="Basic Movements in Gymnastics"&gt;gymnastics forward
roll&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
Techniques: &lt;span id="ui21"&gt;&lt;a href="http://www.youtube.com/watch?v=G6bky8UEug8" title="Forward roll hankido style"&gt;Forward
roll&lt;/a&gt;&lt;/span&gt;,
&lt;span
id="f7lx"&gt;&lt;a href="http://www.youtube.com/watch?v=zu-tix0pdQY" title="MMA Footwork Secrets for Striking Power"&gt;footwork&lt;/a&gt;&lt;/span&gt;,
&lt;span id="c0.s"&gt;&lt;a href="http://www.youtube.com/watch?v=LhezbNHHYno" title="Elbow strike tutorial"&gt;elbow&amp;nbsp;strikes&lt;/a&gt;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Further updates can be found at:
&lt;a href="http://docs.google.com/View?id=dckp3cwx_62csk8r4gk"&gt;http://docs.google.com/View?id=dckp3cwx_62csk8r4gk&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="hapkido"></category></entry><entry><title>Lisp Conversion</title><link href="http://adamgetchell.org/lisp-conversion.html" rel="alternate"></link><updated>2011-12-01T23:32:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2011-12-01:lisp-conversion.html</id><summary type="html">&lt;p&gt;A few months and a lot of Lisp later, I find myself convinced/converted&amp;nbsp;&amp;#8230;  &lt;/p&gt;
&lt;p&gt;&amp;#8230; To &lt;a href="http://clojure.org/"&gt;Clojure&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Rajesh, you were&amp;nbsp;right!  &lt;/p&gt;
&lt;p&gt;As far as language ~~snobbery~~ coolness, it has a bunch of features I
like such&amp;nbsp;as:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href="http://clojure.org/dynamic"&gt;&lt;span class="caps"&gt;REPL&lt;/span&gt;&lt;/a&gt; for fast&amp;nbsp;development&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clojure.org/functional_programming"&gt;Functional programming&lt;/a&gt;
    with &lt;a href="http://thinkrelevance.com/blog/2008/09/16/pcl-clojure-chapter-6.html"&gt;immutable
    values&lt;/a&gt; which
    makes it easy to reason about&amp;nbsp;concurrency&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clojure.org/concurrent_programming"&gt;Concurrent programming&lt;/a&gt;
    via &lt;a href="http://clojure.org/refs"&gt;software transactional&amp;nbsp;memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A
    &lt;a href="http://hornbeck.wordpress.com/2009/07/05/lisp-1-vs-lisp-2/"&gt;Lisp-1&lt;/a&gt;
    &lt;a href="http://clojure.org/lisp"&gt;dialect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;OOP&lt;/span&gt; benefits without &lt;span class="caps"&gt;OOP&lt;/span&gt; using &lt;a href="http://clojure.org/runtime_polymorphism"&gt;runtime&amp;nbsp;polymorphism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lots of modern libraries by being &lt;a href="http://clojure.org/jvm_hosted"&gt;hosted on the
    &lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href="http://groups.google.com/group/clojure"&gt;vibrant community&lt;/a&gt; (my
    &lt;a href="http://groups.google.com/group/fsharp-opensource"&gt;F# groups&lt;/a&gt;, by
    contrast, have had barely 2 messages in the past&amp;nbsp;month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get an idea of what I mean, here&amp;#8217;s an anonymous function to find the
odd numbers in a (lazy) &lt;a href="http://clojure.org/sequences"&gt;sequence&lt;/a&gt; (which
could be a list, vector, or hash&amp;nbsp;map):  &lt;/p&gt;
&lt;p&gt;This idea of &lt;a href="http://formpluslogic.blogspot.com/2009/07/clojure-lazy-seq-and-recursion.html"&gt;lazy
sequences&lt;/a&gt;
is powerful, because you can do things like get the &lt;a href="http://clojure-euler.wikispaces.com/Problem+007"&gt;10,001st prime
number&lt;/a&gt; without blowing
the&amp;nbsp;stack:  &lt;/p&gt;
&lt;p&gt;You can just see the number-crunchy goodness, mixed in with Lispy
functional&amp;nbsp;precision.  &lt;/p&gt;
&lt;p&gt;As far as practicality, there is simply too much awesome&amp;nbsp;stuff.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The language itself is available on
    &lt;a href="https://github.com/clojure/clojure"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It has nice &lt;a href="http://clojuredocs.org/"&gt;documentation&lt;/a&gt; to &lt;a href="http://dev.clojure.org/display/doc/Getting+Started"&gt;get you
    started&lt;/a&gt;&amp;nbsp;quickly&lt;/li&gt;
&lt;li&gt;There are great learning
    resources: &lt;a href="http://www.4clojure.com/"&gt;4Clojure&lt;/a&gt; &lt;a href="https://github.com/functional-koans/clojure-koans"&gt;clojure-koans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nice examples of algorithms such
    as &lt;a href="http://www.algolist.net/Algorithms/Sorting/Quicksort"&gt;Quicksort&lt;/a&gt;
    using &lt;a href="http://rosettacode.org/wiki/Sorting_algorithms/Quicksort#Clojure"&gt;Clojure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thinkrelevance.com/blog/2008/09/16/pcl-clojure.html"&gt;Easy
    translation&lt;/a&gt;
    from &lt;a href="http://www.gigamonkeys.com/book/"&gt;Practical Common&amp;nbsp;Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href="http://www.jetbrains.com/idea/download/index.html"&gt;freely
    available&lt;/a&gt;
    &lt;a href="http://www.jetbrains.com/idea/"&gt;killer &lt;span class="caps"&gt;IDE&lt;/span&gt;&lt;/a&gt; &lt;a href="http://plugins.intellij.net/plugin/?id=4050"&gt;supporting
    Clojure&lt;/a&gt; with &lt;a href="https://github.com/technomancy/leiningen"&gt;project
    building&lt;/a&gt; and GitHub&amp;nbsp;support&lt;/li&gt;
&lt;li&gt;&lt;a href="http://webnoir.org/"&gt;Simple&lt;/a&gt; to
    &lt;a href="https://github.com/weavejester/compojure/wiki"&gt;complex&lt;/a&gt; web
    application support to
    &lt;a href="http://mmcgrana.github.com/2010/07/develop-deploy-clojure-web-applications.html"&gt;&lt;span class="caps"&gt;EC2&lt;/span&gt;&lt;/a&gt;,
    &lt;a href="http://blog.heroku.com/archives/2011/7/5/clojure_on_heroku/"&gt;Heroku&lt;/a&gt;,
    &lt;a href="http://googlecode.blogspot.com/2010/05/better-performance-in-app-engine-with.html"&gt;Google App
    Engine&lt;/a&gt;
    and&amp;nbsp;others&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can easily do &lt;span class="caps"&gt;TDD&lt;/span&gt; (test driven development), which is really handy
if, say, you&amp;#8217;ve got a bunch of math functions that you want to be sure
are correct when you port/rewrite&amp;nbsp;code.  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a screenshot of &lt;a href="http://www.jetbrains.com/idea/"&gt;IntelliJ&lt;/a&gt; with a
typical &lt;a href="https://github.com/technomancy/leiningen"&gt;Leiningen&lt;/a&gt; project&amp;nbsp;open:  &lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://4.bp.blogspot.com/-M-dYvAMiipM/TtfPdohU_mI/AAAAAAAA_vE/NeiVEH5OKHs/s640/idea-lein.png)](http://4.bp.blogspot.com/-M-dYvAMiipM/TtfPdohU_mI/AAAAAAAA_vE/NeiVEH5OKHs/s1600/idea-lein.png)

&lt;/div&gt;

&lt;p&gt;You can see the typical Leiningen project layout, with /src and /test
folders and subfolders. First, we&amp;#8217;ll write a ~~function~~ test for a
function we want which sums over all values in a given&amp;nbsp;sequence:  &lt;/p&gt;
&lt;p&gt;The test is in C:\Projects\&lt;span class="caps"&gt;CDT&lt;/span&gt;\Newton\test\Newton.test\core.clj,
and the :use [Newton.utilities] tells it to look in the file
C:\Projects\&lt;span class="caps"&gt;CDT&lt;/span&gt;\Newton\src\Newton\utilities.clj for our function.
Note the use of metadata \^{:utilities true} to mark this as a utilities
test, which we&amp;#8217;ll use later for organization. Our test checks that our
to-be-defined sum test sums correctly over both a list and a&amp;nbsp;vector.  &lt;/p&gt;
&lt;p&gt;Now here&amp;#8217;s the contents of
C:\Projects\&lt;span class="caps"&gt;CDT&lt;/span&gt;\Newton\src\Newton\utilities.clj:  &lt;/p&gt;
&lt;p&gt;Finally, Leiningen allows us to choose test selectors so that we can
specify which tests we want to run via&amp;nbsp;project.clj:  &lt;/p&gt;
&lt;p&gt;Now by running lein at a command prompt (to save startup time) we can
pick our&amp;nbsp;tests:  &lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://1.bp.blogspot.com/-myffmQYgpC8/TtfWhU5qTQI/AAAAAAAA_vM/uTxhOaHJSO4/s640/lein.png)](http://1.bp.blogspot.com/-myffmQYgpC8/TtfWhU5qTQI/AAAAAAAA_vM/uTxhOaHJSO4/s1600/lein.png)

&lt;/div&gt;

&lt;p&gt;Note in the first case, we don&amp;#8217;t expect any tests to run (test! means
fetch dependencies and then run tests) because our sole test has been
marked as a :utility. In the second case, we tell it to run :utility and
it does, telling us that our test passed.&amp;nbsp;Success!  &lt;/p&gt;
&lt;p&gt;If our test had failed, clojure&amp;#8217;s test suite would give us good
information. Here, I&amp;#8217;m going to modify the second assertion to fail.
Watch what&amp;nbsp;happens:  &lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://4.bp.blogspot.com/-CqWRxYR47_Y/TtfXz8Po9GI/AAAAAAAA_vU/RvqznnUbXSk/s640/lein-test-fail.png)](http://4.bp.blogspot.com/-CqWRxYR47_Y/TtfXz8Po9GI/AAAAAAAA_vU/RvqznnUbXSk/s1600/lein-test-fail.png)

&lt;/div&gt;

&lt;p&gt;How cool is&amp;nbsp;that?  &lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve so far read &lt;a href="http://www.manning.com/rathore/"&gt;Clojure in Action&lt;/a&gt;
and &lt;a href="http://joyofclojure.com/"&gt;The Joy of Clojure&lt;/a&gt; (both highly
recommended), plus enough daily doses  to actually stop mucking about
and start with the &lt;a href="https://github.com/ucdavis/CDT"&gt;&lt;span class="caps"&gt;CDT&lt;/span&gt; code&lt;/a&gt;&amp;nbsp;already.  &lt;/p&gt;
&lt;p&gt;So, a modern Lisp with powerful IDEs, modern libraries from the &lt;span class="caps"&gt;JVM&lt;/span&gt;,
interactive &lt;span class="caps"&gt;REPL&lt;/span&gt;/&lt;span class="caps"&gt;TDD&lt;/span&gt;, great documentation, learning resources, and
books &amp;#8212; what&amp;#8217;s not to&amp;nbsp;like?  &lt;/p&gt;
&lt;/p&gt;</summary><category term="lisp"></category><category term="tdd"></category><category term="clojure"></category></entry><entry><title>Reflection tools for F#</title><link href="http://adamgetchell.org/embedding-gists-in-blogger.html" rel="alternate"></link><updated>2011-04-19T08:52:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2011-04-19:embedding-gists-in-blogger.html</id><summary type="html">&lt;p&gt;I went to the fabuluous &lt;a href="http://codeconf.com/"&gt;CodeConf 2011&lt;/a&gt; (view
&lt;a href="http://lanyrd.com/2011/codeconf/slides/"&gt;slides&lt;/a&gt;,
&lt;a href="https://github.com/blog/835-codeconf-2011-mission-accomplished"&gt;recaps&lt;/a&gt;
&lt;a href="http://www.peebs.org/2011/04/codeconf-2011-day-one/"&gt;here&lt;/a&gt;,
&lt;a href="http://thechangelog.com/post/4507882708/codeconf-sunday-summary"&gt;here&lt;/a&gt;,
and &lt;a href="https://convore.com/codeconf/"&gt;here&lt;/a&gt;) and the first talk was
&amp;#8220;Tinker Fairy&amp;#8221; &lt;a href="http://twitter.com/#!/drnic"&gt;Dr. Nic&lt;/a&gt; telling us to
&lt;a href="http://lanyrd.com/2011/codeconf/sdmxb/"&gt;build tools&lt;/a&gt; to do stuff that
we don&amp;#8217;t want to remember later. Then build tools to build those
tools &amp;#8212; tool&amp;nbsp;tools.  &lt;/p&gt;
&lt;p&gt;One of the neat modern takes on Lisp
&lt;a href="http://en.wikipedia.org/wiki/S-expression"&gt;s-expressions&lt;/a&gt; in modern
virtual machines like the &lt;span class="caps"&gt;CLR&lt;/span&gt; is
&lt;a href="http://en.wikipedia.org/wiki/Reflection_(computer_programming)"&gt;Reflection&lt;/a&gt;.
At least, I think that it will be useful in reversing Lisp macros and
expressions into the F#/&lt;span class="caps"&gt;OCAML&lt;/span&gt;&amp;nbsp;equivalents.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://flyingfrogblog.blogspot.com/"&gt;Dr. Jon Harrop&lt;/a&gt; gives a terse but
informative example in his book &lt;a href="http://fsharpnews.blogspot.com/2010/04/visual-f-2010-for-technical-computing.html"&gt;Visual F# 2010 for Technical
Computing&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;First, we want a union type which represents (i.e. abstracts away) the
F# type&amp;nbsp;system:  &lt;/p&gt;
&lt;p&gt;Next, we want a (recursive) function (called, straightforwardly enough,
type_of) that reflects (using FSharpType) and translates a given
System.Type object into one of the &amp;#8216;a ty union types defined&amp;nbsp;previously:  &lt;/p&gt;
&lt;p&gt;This then allows us to emit the following two liner which can parse
objects such as the List.fold function! (Note: everything after the ;;
is the F# Interactive&amp;nbsp;response.)  &lt;/p&gt;
&lt;p&gt;Neat stuff! I&amp;#8217;ve a thousand or two lines of Lisp to look at, so this is
not something I want to have to remember&amp;nbsp;later.&lt;/p&gt;</summary><category term="f#"></category></entry><entry><title>Software Archaeology</title><link href="http://adamgetchell.org/software-archaeology.html" rel="alternate"></link><updated>2011-04-11T22:19:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2011-04-11:software-archaeology.html</id><summary type="html">&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Vernor_Vinge"&gt;Vernor Vinge&lt;/a&gt; prophetically
&lt;a href="http://books.slashdot.org/story/03/09/18/0411259/Review-A-Fire-Upon-the-Deep-Special-Edition"&gt;wrote of a
time&lt;/a&gt;
when programmer-archaeologists maintained the fabric of civilization by
diving into and modifying legacy code which ran the systems that society
depended&amp;nbsp;upon.&lt;/p&gt;
&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Various other folks have picked up on this notion, from the
[serious](http://java.sys-con.com/node/487614) to the
[humorous](http://giant-communist-robots.com/?p=154). Here, though, I&amp;#8217;ll
talk about this from my own perspective (which is what you came here
for, right?).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

[Kernighan&amp;#8217;s](http://www.ieee.org/portal/cms_docs_societies/sscs/PrintEditions/200804.pdf)
saw goes that debugging code is twice as hard as writing it; therefore
we ought to keep our meaning clear and our code as simple as possible.
How to do so?

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

There are clear debates about that: [functional vs.
declarative](http://msdn.microsoft.com/en-us/library/bb669144.aspx),
[procedural vs.
object-oriented](http://www.virtuosimedia.com/dev/php/procedural-vs-object-oriented-programming-oop),
not to mention [Patterns &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;
Anti-Patterns](http://books.google.com/books?hl=en&amp;lr=&amp;id=HBAuixGMYWEC&amp;oi=fnd&amp;pg=&lt;span class="caps"&gt;PA383&lt;/span&gt;&amp;dq=patterns+and+antipatterns&amp;ots=emzw4QN8Dj&amp;sig=AFOJ5TeY4zHfa1pCKky8ux_X9hQ#v=onepage&amp;q=patterns%20and%20antipatterns&amp;f=false),
[Dependency Injection/Loose
Coupling](http://martinfowler.com/articles/injection.html),
[Aspect-Oriented
Programming](http://en.wikipedia.org/wiki/Aspect-oriented_programming),
etc. etc. These can be very fun to get into and there are diverse and
subtle points all around, that I won&amp;#8217;t attempt to do them justice here
but if you&amp;#8217;ve a free week or two read any of the above links and the
next five references thereafter and you&amp;#8217;ll come away more enlightened,
or more confused.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

But in the meantime, you&amp;#8217;ve either got to a) emit working code or b)
manage those who do a). And if you could do so without too badly
embarrassing yourself in the future (which is nigh impossible), or at
least, be willing to chalk them up as learning experiences, you&amp;#8217;re well
on your way to some sort of nirvana of ineffable, crystallized logic
which is a perfect solution to your problem.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(Getting a clear problem statement itself being at least half of the
battle and most of the difficulty, given business processes that aren&amp;#8217;t
well understood, or mutate depending upon who&amp;#8217;s doing them or in which
context. But that discussion more properly belongs in the realm of
project management and business analysis, and won&amp;#8217;t be further remarked
upon here.)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

If you&amp;#8217;re not a coder yourself (or horribly out of date), you can still
make a fair crack at judging the product by the team. [The Mythical
Man-Month](http://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959)
is the canonical reference, but [Joel
Spolsky&amp;#8217;s](http://www.joelonsoftware.com/) [Joel
Test](http://www.joelonsoftware.com/articles/fog0000000043.html) is
pretty concise, descriptive, and useful.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Archaeology can imply adventurous, sunburned types digging around fossil
layers high in vast dusty mesas of stratified rock. And truth be told,
that&amp;#8217;s not a bad analogy for the cacophony of systems that the average
&lt;span class="caps"&gt;IT&lt;/span&gt; organization has inherited, cobbled together, purchased (often from a
now-defunct vendor), or perhaps in a fit of creativity &amp;#8212; produced.
After all, post dot-com, [Greenfield
development](http://footheory.com/blogs/donnfelker/archive/2008/05/05/software-development-greeenfield-vs-brownfield.aspx)
is rare.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

But Brownfield development is often so painful that most developers will
throw up their hands and rewrite from scratch, rather than attempting to
piece together the workings of an often poorly documented system written
with &amp;#8220;ancient&amp;#8221; methods/languages.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Hence, onto the first item on the Joel Test: source control.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

But not just any source control. [GitHub](https://github.com/).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Why GitHub? Well, first, it has the elusive &amp;#8220;Alpha Coder mindshare&amp;#8221;.
While it may not matter one way or another to your business that the
Linux kernel, Git itself, jQuery, Ruby on Rails, and a host of other
important projects exist on GitHub, it matters to your programmers,
whether they know it or not (and the good ones will know it).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

All of these actively maintained open source projects provide something
more interesting than mindshare: examples. Pick a programming language,
and you will very likely find an interesting project or two on GitHub
that has something worth learning. It may even prove to be the Rosetta
stone of programming languages &amp;#8212; you may find solutions to the same
problem in many different programming languages.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Second, [Social
Coding](http://radar.oreilly.com/2009/01/github-making-code-more-social.html).
Everyone knows of the usefulness of social networks &amp;#8212; they existed
before, but it&amp;#8217;s the tools that made them marketable/actionable. Social
coding in GitHub takes the usual forms &amp;#8212; followers, blogs, wikis,
issues, teams, organizations &amp;#8212; plus some more useful ones (e.g. the
[GitHub &lt;span class="caps"&gt;API&lt;/span&gt;](http://develop.github.com/)).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

We used Team Foundation Server. It was a nice tool in our .&lt;span class="caps"&gt;NET&lt;/span&gt;
development shop &amp;#8212; a bit painful to setup with it&amp;#8217;s dependence on
SharePoint, but useful. However, it didn&amp;#8217;t scale too well in terms of
collaborators. We needed to add them as users into Active Directory,
fuss about with SharePoint and licensing, and so forth.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

So next we tried [CodePlex](http://www.codeplex.com/). CodePlex was,
essentially, &lt;span class="caps"&gt;TFS&lt;/span&gt; in the cloud, and it mostly worked. There were capacity
issues, and it wasn&amp;#8217;t always friendly with non .&lt;span class="caps"&gt;NET&lt;/span&gt; languages, but the
main reason we didn&amp;#8217;t adopt it wholesale was:

&lt;/div&gt;

&lt;div&gt;

1.  No way to make private repositories
2.  Often painful to connect into
3.  Went down/was slow often enough that we didn&amp;#8217;t want to rely on it.

&lt;div&gt;

This really illustrates the third virtue of GitHub, that it&amp;#8217;s a true
cloud service &amp;#8212; but cloud computing is all the hype right now and I
really wanted to illustrate it&amp;#8217;s particular benefits in this instance.

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

In going with GitHub, we created an organization for our, well,
organization. This gives us several important advantages over CodePlex:

&lt;/div&gt;

&lt;div&gt;

1.  Private repositories
2.  Teams
3.  Unlimited collaborators (in particular, we can mix and match between
    general GitHub accounts and team members)
4.  Blogs, Wikis, Gists, Issue Trackers with voting, per-line file
    commenting, and other social features
5.  Works well with any programming language
6.  Fast, decentralized development (Git works locally, so you can get
    on a plane, code, and upload your changes once you&amp;#8217;ve got internet
    access)
7.  Reliable versioning (Git uses hashes for files)
8.  Works well with any &lt;span class="caps"&gt;OS&lt;/span&gt;/&lt;span class="caps"&gt;IDE&lt;/span&gt; (Git has integration with Visual Studio,
    Eclipse, XCode plus command-line versions in most every &lt;span class="caps"&gt;OS&lt;/span&gt;)
9.  Git is a well-regarded distributed version control system (&lt;span class="caps"&gt;DCVS&lt;/span&gt;)

&lt;div&gt;

My programming team ported projects over from &lt;span class="caps"&gt;TFS&lt;/span&gt; and CodePlex in under
a day. By following projects, I can watch check-ins, view version
differences, open/close issues, and do all the usual software management
stuff without getting in the way. (Or better yet, delegate.)

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

The fees are pretty nominal (organizations get charged based on the
numbers of private repositories they want; public ones are free). GitHub
is hosted by RackSpace, so the reliability has been better than our
in-house &lt;span class="caps"&gt;TFS&lt;/span&gt; boxes. Today I just added someone outside our organization
to one of our projects with minimal hassle.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

If you&amp;#8217;re going to be digging up fossilized code, Git and GitHub are
fairly pleasant tools for the job.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Look at the time! This isn&amp;#8217;t really everything I wanted to say, but I&amp;#8217;ve
probably said enough for now (and I have other pressing priorities
including my own research), so I&amp;#8217;ll leave further pontificating for
another time.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

I hope this was informative, or at least, entertaining!

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(You can find me on GitHub [here](https://github.com/acgetchell)!)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>Socialism, Capitalism, Spending, oh my!</title><link href="http://adamgetchell.org/socialism-capitalism-spending-oh-my.html" rel="alternate"></link><updated>2010-12-04T01:50:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2010-12-04:socialism-capitalism-spending-oh-my.html</id><summary type="html">&lt;p&gt;For a change of pace, I&amp;#8217;m going to ruminate on the state of affairs as I
see&amp;nbsp;them.&lt;/p&gt;
&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(It&amp;#8217;s my blog, I get to exercise my [First
Amendment](http://www.usconstitution.net/xconst_Am1.html)! ;-)
&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(Yes, I&amp;#8217;m procrastinating. The cluster is down for maintenance, and I
need a break from technical reading and writing.)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

My Pop shared an interesting article during Thanksgiving, which noted
that way back in the beginning of the direct founding of the &lt;span class="caps"&gt;U.S.&lt;/span&gt;A.,
colonists in the 1600&amp;#8217;s tried a form of socialism wherein the results of
the season&amp;#8217;s harvest were shared equally amongst the colonists.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(The account was written by the governor at the time, direct citations
anyone?)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

The official noted that there were many deaths due to starvation, much
inequity in terms of labor given vs. food received, and so forth. On the
whole, the colony was in danger of perishing as the vicious cycle of
famine made the remaining colonists weaker and less able to work, thus
reducing the harvest, and so forth.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

In these dire straits, the next thing they tried was that they divided
the land up equally amongst the families instead. Each family was free
to keep the results of their work, and if they had excess, sell it for
profit.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

The results were immediate: the next season&amp;#8217;s harvest was so bountiful
that many families had excess, and those families that did not were able
to buy from those that did. No one starved.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

The official also notes the changes in motivation (paraphrasing): &amp;#8220;Women
who claimed infirmity and poor health when compelled to serve the
community went willingly into their own fields with their children. The
high (and unacceptable) costs that might have necessary to compel this
behavior were no longer required &amp;#8230;&amp;#8221;

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Score one for capitalism, individual thrift and perseverance, and &amp;#8230;.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

But wait. Where did they get the land?

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Oh, that&amp;#8217;s right. **They were given it.** Or, from another perspective,
perhaps they stole it. (I don&amp;#8217;t want to get into those issues since
there&amp;#8217;s even more controversy about that and it&amp;#8217;s incidental to my
point.)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

The point is: the colonists were given the tools to feed themselves, and
they then were allowed to make their own way.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Capitalism is a fine system for efficient distribution of goods,
services, and products. But it was an act of socialism (specifically,
the land grant) that gave those first colonists the means to start on
their new lives. (They had to supply the effort.)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

We&amp;#8217;re no longer an agrarian society. We&amp;#8217;re an [information
one](http://en.wikipedia.org/wiki/Information_society).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

What are the tools needed to make our way today?

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

I&amp;#8217;d argue for these, in descending order:

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

1.  Health
2.  Free flow of people, goods, services, and information
3.  Education
4.  Stability

&lt;div&gt;

I&amp;#8217;d also argue that lack of any one of these items is problematic.

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

That last item may be even more difficult to quantify, except that you
know it when you see it: wars, famines, natural disasters, stock market
crashes, etc. Things too big for any individual or family to handle
alone, something that requires a societal solution.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

The world is
[chaotic](http://stason.org/&lt;span class="caps"&gt;TULARC&lt;/span&gt;/science-engineering/nonlinear/index.html).
Trying to impose too much stability results in a dead/fragile/stratified
society (see history for numerous examples). Too little, and [no one can
plan for the future](http://en.wikipedia.org/wiki/The_Road).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

We are a [mixed socialist/capitalist
society](http://en.wikipedia.org/wiki/Mixed_economy). Go towards any
extreme for any of the above, and we will suffer.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Define suffering: again, you know it when you see it. Death, disease,
famine, wasted lives, inability to meaningfully affect your own destiny,
loss of freedoms, etc. These are broad brush strokes,
individuals/society will naturally have their own values.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

So how do we provide the above to our citizenry in our society? How do
we give the tools to be successful, without redistributing the results
of that success [unfairly](http://en.wikipedia.org/wiki/Fair_division)?

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(This is not meant as an exhaustive analysis, but a mere framing of the
problem.)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Government spending:

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Now let me say from the outset, that like general relativity, I prefer
solutions to be as localized as possible. I&amp;#8217;d also like to remain as
free as possible from any equations of constraint enforced by some
larger entity. I don&amp;#8217;t dispute that some are necessary (anarchy is cool
until you live in it), but I wonder if we are half as good at **removing
laws** as we are at [making them](http://law.justia.com/).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

These entities need money to do their work. Right away that suggests a
neat solution: [don&amp;#8217;t give them
any](http://en.wikipedia.org/wiki/Laffer_curve). Unfortunately, that
only works if you already have the means to provide the 4 items
mentioned above. Clearly, not all individuals do, so a society based
strictly upon &amp;#8220;to each their own&amp;#8221; would be [manifestly
unfair](http://en.wikipedia.org/wiki/Plutocracy), and I do retain the
silly idea that [the universe ought to be as fair as
possible](http://www.theonion.com/articles/universe-admits-to-wronging-area-man-his-entire-li,18556/).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

(Oh wait, we&amp;#8217;re already a
[plutocracy](http://en.wikipedia.org/wiki/Lobbying_in_the_United_States).)

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Now spending itself is a moderately abstract formulation of reality:
there are only so much goods, services, information, and time available.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Spend less than you make, and you have savings: for a rainy day, or to
help someone else start something they couldn&amp;#8217;t otherwise do (perhaps
with the hopes that you&amp;#8217;ll be compensated in the future for lending your
resources today).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Spend more than you make (if you&amp;#8217;re allowed to), and you have debt, or
future restrictions on your earning potential.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Pretty straightforward stuff.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

It seems that Americans in general are now used to the consumption
economy fueled by credit and debt, and we&amp;#8217;ve passed that along to our
government. Or perhaps it&amp;#8217;s the other way around.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

That&amp;#8217;s a fairly common rant, and I&amp;#8217;ll not repeat it except to say: we&amp;#8217;ve
obviously hit the limit on how much debt (monetary, environmental, etc.)
we&amp;#8217;ve incurred, and we should be looking to pay it off instead of
increase it.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

This seems pretty simple to say and do, but let&amp;#8217;s watch how events
unfold and see if the [politicians actually
realize](http://paul.house.gov/index.php?option=com_content&amp;view=article&amp;id=1799:dont-raise-the-debt-ceiling&amp;catid=31:texas-straight-talk)
that our government cannot continue to live beyond its means. At least
the [Fiscal Commission](http://www.fiscalcommission.gov/) is a start,
although of course there are economists [who think it&amp;#8217;s not a problem
after
all](http://www.csmonitor.com/&lt;span class="caps"&gt;USA&lt;/span&gt;/Politics/2010/1203/Is-deficit-commission-wrong-Critics-say-there-s-no-national-debt-crisis.).

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

I&amp;#8217;m not an economist, but there seem to be some pretty [instructive
examples](http://www.csmonitor.com/Commentary/the-monitors-view/2010/1202/After-the-deficit-commission-on-to-Plan-B)
that indicate otherwise.

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;

Okay, back to considering things I have somewhat of a clue about.

&lt;/div&gt;

&lt;div&gt;

**  
**

&lt;/div&gt;

&lt;div&gt;

**  
**

&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;div&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;/p&gt;</summary><category term="politics"></category></entry><entry><title>CDT rewrite toolbox</title><link href="http://adamgetchell.org/cdt-rewrite-toolbox.html" rel="alternate"></link><updated>2010-01-20T07:54:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2010-01-20:cdt-rewrite-toolbox.html</id><summary type="html">&lt;p&gt;So, my colleagues have developed a
&lt;a href="http://adamgetchell.blogspot.com/2007_10_01_archive.html"&gt;&lt;span class="caps"&gt;CDT&lt;/span&gt;&lt;/a&gt; program
that&amp;#8217;s usable. Fortunately for me, it&amp;#8217;s in &lt;span class="caps"&gt;LISP&lt;/span&gt;, which lacks parallel
processing, modern libraries, a nice &lt;span class="caps"&gt;IDE&lt;/span&gt;, and the other goodies I&amp;#8217;ve
become accustomed to in my work life. (That means I get to figure these
features out and thereby&amp;nbsp;contribute!)  &lt;/p&gt;
&lt;p&gt;Enter Visual Studio 2008, &lt;a href="http://ironpython.codeplex.com/"&gt;IronPython&lt;/a&gt;,
and &lt;a href="http://ironscheme.codeplex.com/"&gt;IronScheme&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Setting up IronScheme with Visual Studio 2008 was usefully detailed
&lt;a href="http://ironscheme.codeplex.com/wikipage?title=IronScheme%20Visual%20Studio%202008%20Integration&amp;amp;referringTitle=Documentation"&gt;here&lt;/a&gt;:
(note, you need
&lt;a href="http://msdn.microsoft.com/en-us/library/bb707481.aspx"&gt;RegPkg&lt;/a&gt; via the
&lt;a href="http://www.microsoft.com/downloads/details.aspx?familyid=30402623-93ca-479a-867c-04dc45164f5b&amp;amp;displaylang=en"&gt;Visual Studio 2008
&lt;span class="caps"&gt;SDK&lt;/span&gt;&lt;/a&gt;)  &lt;/p&gt;
&lt;p&gt;Setting up IronPython with Visual Studio 2008 via &lt;a href="http://ironpythonstudio.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=8934"&gt;IronPython Studio
(integrated
setup)&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;And voila, no more excuses to complain about&amp;nbsp;development.  &lt;/p&gt;
&lt;p&gt;(Yes, the end goal is to make it Python and cross-platform, although I&amp;#8217;m
really eying&amp;nbsp;F#)&lt;/p&gt;</summary><category term="lisp"></category><category term="cdt"></category><category term="python"></category></entry><entry><title>A Nobel Pursuit</title><link href="http://adamgetchell.org/nobel-pursuit.html" rel="alternate"></link><updated>2008-11-12T06:58:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-11-12:nobel-pursuit.html</id><summary type="html">&lt;p&gt;Well, the Nobel Prizewinners are to be announced ~~tomorrow~~Tuesday. In
the spirit of fun (and to demonstrate how much science really does
advance), here are some predictions and other fun facts gleaned from
around the&amp;nbsp;&amp;#8216;Net:  &lt;/p&gt;
&lt;p&gt;Can you predict the Nobel Prizewinners in Chemistry &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Physics by
counting citations? Apparently&amp;nbsp;not:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.symmetrymagazine.org/breaking/2008/08/27/nobel-prize-citations/"&gt;http://www.symmetrymagazine.org/breaking/2008/08/27/nobel-prize-citations/&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Since this is an election year, it&amp;#8217;s interesting to note that 61 Nobel
Laureates (including 22 physicists) &amp;#8212; the highest ever &amp;#8212; support
Barack Obama for&amp;nbsp;President:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://sefora.org/2008/09/25/61-nobel-laureates-in-science-endorse-obama/"&gt;http://sefora.org/2008/09/25/61-nobel-laureates-in-science-endorse-obama/&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Perhaps it&amp;#8217;s because Obama/Biden actually have a &lt;a href="http://pubs.acs.org/cen/news/86/i39/8639notw10.html"&gt;cogent science
policy&lt;/a&gt;, and happen
to believe scientists when they talk about evolution or global&amp;nbsp;warming.  &lt;/p&gt;
&lt;p&gt;Interestingly,
&lt;a href="http://uk.reuters.com/article/scienceNews/idUKTRE49088V20081001"&gt;Reuters&lt;/a&gt;
seems to think citations count for potential Nobel&amp;nbsp;prizewinners:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://physics.about.com/b/2008/10/04/2008-nobel-prize-coming-soon.htm"&gt;http://physics.about.com/b/2008/10/04/2008-nobel-prize-coming-soon.htm&lt;br /&gt;
&lt;/a&gt;&lt;br /&gt;
They think the contenders&amp;nbsp;are:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vera Rubin&lt;/strong&gt; at Carnegie Institute in Washington for her &lt;a href="http://www.amnh.org/education/resources//rfl/web/essaybooks/cosmic/p_rubin.html"&gt;work on
    Dark&amp;nbsp;Matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Andre Geim&lt;/strong&gt; and Kostya Novoslev for
    &lt;a href="http://www.sciencewatch.com/inter/aut/2008/08-aug/08augSWGeim/"&gt;Graphene&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://physicsworld.com/blog/2008/10/who_will_win_the_2008_nobel_pr.html"&gt;Physics
World&lt;/a&gt;
offers the following&amp;nbsp;candidates:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rle.mit.edu/rleonline/People/DanielKleppner_cv.html"&gt;&lt;strong&gt;Daniel
    Kleppner&lt;/strong&gt;&lt;/a&gt;
    at &lt;span class="caps"&gt;&lt;span class="caps"&gt;MIT&lt;/span&gt;&lt;/span&gt;for inventing the &lt;a href="http://www.freepatentsonline.com/3255423.html"&gt;hydrogen&amp;nbsp;maser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Berkeley’s &lt;strong&gt;Saul Perlmutter&lt;/strong&gt; and &lt;strong&gt;Brian Schmidt&lt;/strong&gt; at the
    Australian National University for their discovery that the
    &lt;a href="http://www.sciam.com/article.cfm?id=discovering-a-dark-universe"&gt;universe’s rate of expansion is
    increasing&lt;/a&gt;…leading
    to the concept of dark&amp;nbsp;energy&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;&lt;span class="caps"&gt;MIT&lt;/span&gt;&amp;#8217;&lt;/span&gt;s &lt;strong&gt;Alan Guth&lt;/strong&gt; and &lt;strong&gt;Andrei Linde&lt;/strong&gt;
    at Stanford University for their work on
    &lt;a href="http://en.wikipedia.org/wiki/Cosmic_inflation"&gt;inflation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chapman University&amp;#8217;s &lt;strong&gt;Yakir Aharanov&lt;/strong&gt; for the &lt;span
    style="text-decoration: underline;"&gt;&lt;/span&gt; &lt;a href="http://en.wikipedia.org/wiki/Aharonov-Bohm_effect"&gt;Aharanov-Bohm
    effect&lt;/a&gt; and
    &lt;strong&gt;Michael Berry&lt;/strong&gt; at the University of Bristol for the &lt;a href="http://www.mi.infm.it/manini/berryphase.html"&gt;Berry
    phase&lt;/a&gt; &amp;#8212; the &lt;span class="caps"&gt;AB&lt;/span&gt;
    effect being related to the Berry&amp;nbsp;phase&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;John Pendry&lt;/strong&gt; of Imperial College and Duke University&amp;#8217;s &lt;strong&gt;David
    Smith&lt;/strong&gt; for their prediction and discovery of &lt;a href="http://physicsworld.com/cws/article/print/17398"&gt;negative&amp;nbsp;refraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Roger Penrose&lt;/strong&gt; at Oxford University and Cambridge&amp;#8217;s &lt;strong&gt;Stephen
    Hawking&lt;/strong&gt; for their contributions to general relativity theory and&amp;nbsp;cosmology&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Atsuto Suzuki&lt;/strong&gt; from Japan&amp;#8217;s &lt;a href="http://neutrino.kek.jp/"&gt;SuperKamiokande
    experiment&lt;/a&gt; and &lt;strong&gt;Art MacDonald&lt;/strong&gt; from
    &lt;span class="caps"&gt;&lt;span class="caps"&gt;SNO&lt;/span&gt;&lt;/span&gt;in Canada for their work on &lt;a href="http://www.phys.hawaii.edu/%7Ejgl/nuosc_story.html"&gt;neutrino&amp;nbsp;oscillations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Who am I going to pick? Well, not because of any insight, but because of
fondness for the topic I&amp;#8217;m going with one of the cosmological
predictions, either inflation, dark matter, or dark energy. Maybe
they&amp;#8217;ll all be grouped&amp;nbsp;together.  &lt;/p&gt;
&lt;p&gt;Tune in ~~tomorrow~~Tuesday to see who&amp;nbsp;wins!  &lt;/p&gt;
&lt;p&gt;Update: &lt;span style="font-weight: bold;"&gt;Nambu&lt;/span&gt; (of the
&lt;a href="http://en.wikipedia.org/wiki/Nambu-Goto_action"&gt;Nambu-Goto action&lt;/a&gt; for
bosonic string theory), &lt;span
style="font-weight: bold;"&gt;Kobayashi&lt;/span&gt; and &lt;span
style="font-weight: bold;"&gt;Masakawa&lt;/span&gt; (of the
&lt;a href="http://en.wikipedia.org/wiki/Cabibbo-Kobayashi-Maskawa_matrix"&gt;Cabbibo-Kobayashi-Masakawa
matrix&lt;/a&gt;
which describes flavor-changing weak decays) share the &lt;a href="http://nobelprize.org/nobel_prizes/physics/laureates/2008/"&gt;Nobel prize for
Physics in
2008&lt;/a&gt;, quite
deservedly, for discovery of &lt;a href="http://hyperphysics.phy-astr.gsu.edu/hbase/forces/unify.html"&gt;spontaneous symmetry
breaking&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Causal Dynamical Triangulations</title><link href="http://adamgetchell.org/causal-dynamical-triangulations.html" rel="alternate"></link><updated>2008-08-01T08:33:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-08-01:causal-dynamical-triangulations.html</id><summary type="html">&lt;p&gt;Rajesh Kommu and &lt;a href="http://www.physics.ucdavis.edu/Text/Carlip.html"&gt;Professor Steve
Carlip&lt;/a&gt; are working on
interesting ways to model quantum gravity using computational methods.
Rajesh has been kind enough to help show me where to get&amp;nbsp;started:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/0105/0105267v1.pdf"&gt;Dynamically Triangulating Lorentzian Quantum&amp;nbsp;Gravity&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/0002/0002050v3.pdf"&gt;A non-perturbative Lorentzian path integral for&amp;nbsp;gravity&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/0011/0011276v2.pdf"&gt;Non-perturbative 3d Lorentzian Quantum&amp;nbsp;Gravity&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/0505/0505113v2.pdf"&gt;Spectral Dimension of the&amp;nbsp;Universe&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;As things often do, it turns into code, which Rajesh has again&amp;nbsp;provided.  &lt;/p&gt;
&lt;p&gt;Of course, Visual Studio 2008 Beta 2 has some &amp;#8230; issues with the
&lt;a href="http://blogs.msdn.com/vcblog/archive/2006/08/02/686894.aspx"&gt;&lt;span class="caps"&gt;STL&lt;/span&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;So, in the interest of getting working code I&amp;#8217;ll try a virtual instance
of Ubuntu which I should be able to
&lt;a href="http://www.ubuntu.com/getubuntu/upgrading"&gt;upgrade&lt;/a&gt; later when 7.10
comes out later this&amp;nbsp;month).  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://register.vmware.com/content/download.html"&gt;VMWare&lt;/a&gt; server
requires &lt;span class="caps"&gt;IIS7&lt;/span&gt;, so here&amp;#8217;s the instructions for &lt;a href="http://www.iis.net/articles/view.aspx/IIS7/Deploy-an-IIS7-Server/Installing-IIS7/Install-IIS7-on-Vista"&gt;installing &lt;span class="caps"&gt;IIS7&lt;/span&gt; on
Vista&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Except that I couldn&amp;#8217;t connect to my own VMWare server, and apparently
&lt;a href="http://weblogs.asp.net/kdente/archive/2007/03/14/vmware-on-vista-lameness.aspx"&gt;VMWare has issues on
Vista&lt;/a&gt;
&amp;#8230;&amp;nbsp;sigh.  &lt;/p&gt;
&lt;p&gt;Okay, it seems to be a &lt;a href="http://communities.vmware.com/docs/DOC-1375"&gt;driver signing
issue&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Meh &amp;#8230; &lt;a href="http://www.microsoft.com/windows/products/winfamily/virtualpc/default.mspx"&gt;Virtual &lt;span class="caps"&gt;PC&lt;/span&gt;
2007&lt;/a&gt;
will probably suffice for my purposes. I&amp;#8217;ll keep &lt;span class="caps"&gt;IIS7&lt;/span&gt;.0 anyways for when
I install Visual Studio 2008 Release Candidate and want to develop
against &lt;span class="caps"&gt;IIS&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;&amp;#8230; Except that Virtual &lt;span class="caps"&gt;PC&lt;/span&gt; 2007 apparently doesn&amp;#8217;t know how to handle
Ubuntu. Just hangs at the nice pretty install screen, wasting &lt;span class="caps"&gt;CPU&lt;/span&gt;&amp;nbsp;cycles.  &lt;/p&gt;
&lt;p&gt;Back to VMWare server. Looks like I can disable driver signing
permanently using an admin&amp;nbsp;console:  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: courier new;"&gt;bcdedit.exe /set
nointegritychecks &lt;span class="caps"&gt;ON&lt;/span&gt;&lt;br /&gt;
bcdedit -set loadoptions&amp;nbsp;\DISABLE_INTEGRITY_CHECKS  &lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Let&amp;#8217;s try this&amp;nbsp;again.  &lt;/p&gt;
&lt;p&gt;Hmmm, that *still* didn&amp;#8217;t disable driver signing. So, bootup using F8,
disable driver&amp;nbsp;signing.  &lt;/p&gt;
&lt;p&gt;Now install VMWare Server 1.04. This time, I&amp;#8217;ll pick a slimmer linux
distribution, like &lt;a href="http://www.xubuntu.org/"&gt;Xubuntu&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;I have to admit, nice, slick, easy install. Not as fast as
&lt;a href="http://www.openbsd.org/"&gt;OpenBSD&lt;/a&gt;&amp;#8216;s bare-bones, efficient text setup,
but it&amp;#8217;s pretty, and more importantly, it works (unlike the heavier
Ubuntu desktop I just&amp;nbsp;tried).  &lt;/p&gt;
&lt;p&gt;Now install VMTools. Oh, it&amp;#8217;s an rpm. Fortunately, there are ways to
&lt;a href="https://ubuntu.wordpress.com/2005/09/23/installing-using-an-rpm-file/"&gt;install using an &lt;span class="caps"&gt;RPM&lt;/span&gt;
file&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Hmmm. Should I be surprised that this didn&amp;#8217;t work? Okay, back to
installing a&amp;nbsp;tarball.  &lt;/p&gt;
&lt;p&gt;That worked, even though it also overwrote pre-existing stuff from the
&lt;span class="caps"&gt;RPM&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;Actually, no it didn&amp;#8217;t. It just stopped VMWare from nagging that VMTools
isn&amp;#8217;t installed. I&amp;#8217;ll just deal with the mouse capture for now, because
this really all is besides the point. (Note to self: more empathy for
people just trying to get their work done using&amp;nbsp;computers.)  &lt;/p&gt;
&lt;p&gt;Some things never change. Xubuntu has 84 updates to&amp;nbsp;patch!  &lt;/p&gt;
&lt;p&gt;Well, the whole point of this was to compile this under Linux (where
Rajesh wrote it) instead of tailchasing Visual Studio 2008/C++ &lt;span class="caps"&gt;STL&lt;/span&gt;
issues. Almost there! Now to find a decent &lt;span class="caps"&gt;IDE&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve heard good things about Eclipse, but I don&amp;#8217;t really want to &lt;a href="https://help.ubuntu.com/community/EclipseWebTools"&gt;unpack
Java, install Tomcat, Web
Tools&lt;/a&gt;, etc. etc.
when I don&amp;#8217;t plan to do any web development. I just want the C/C++&amp;nbsp;portion.  &lt;/p&gt;
&lt;p&gt;Ah, &lt;a href="http://wiki.eclipse.org/index.php/CDT"&gt;&lt;span class="caps"&gt;CDT&lt;/span&gt;&lt;/a&gt; looks like what I want.
Is the magic incantation&amp;nbsp;really:  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: courier new;"&gt;# sudo apt-get
install&lt;/span&gt;&lt;a href="http://packages.ubuntu.com/edgy-backports/devel/eclipse-cdt"&gt;&lt;span
style="font-family: courier new;"&gt;eclipse-cdt&lt;/span&gt;&lt;/a&gt;&lt;span
style="font-family: courier new;"&gt;&lt;br /&gt;
# sudo apt-get install&amp;nbsp;eclipse&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Wow, looks like it is! Now to see if Rajesh&amp;#8217; &lt;span class="caps"&gt;CDT&lt;/span&gt; code compiles&amp;nbsp;&amp;#8230;.  &lt;/p&gt;
&lt;p&gt;Okay, right now Eclipse is a tad confusing. And again, learning Eclipse
isn&amp;#8217;t the&amp;nbsp;point.  &lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s go back to that old standby,&amp;nbsp;vi.  &lt;/p&gt;
&lt;p&gt;Sure helps to have a c++ compiler&amp;nbsp;installed  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: courier new;"&gt;# sudo apt-get install&amp;nbsp;g++&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Well, okay, looks like I&amp;#8217;m missing some other files. Make doesn&amp;#8217;t know
how to make cdtworks. A structural&amp;nbsp;issue.  &lt;/p&gt;
&lt;p&gt;So, when something fails, try something else&amp;nbsp;&amp;#8230;  &lt;/p&gt;
&lt;p&gt;Made some more progress on the Windows &lt;span class="caps"&gt;VC&lt;/span&gt;++ 9 version. Turns out, even
though the project files were stored in my C:\Projects file, Visual
Studio had other ideas, and expected everything to be stored in the
Visual Studio default file path. I&amp;#8217;ll just leave that one, since the
default file path ends up getting stored on our &lt;span class="caps"&gt;SAN&lt;/span&gt;, whereas I&amp;#8217;ve had
the most lovely fun with hard drives and Bitlocker (which is again,
besides the&amp;nbsp;point).  &lt;/p&gt;
&lt;p&gt;Almost complies, although &lt;span class="caps"&gt;VC&lt;/span&gt;++ wants all header file declarations in
stdfx.h. Just missing one file &amp;#8230;&amp;nbsp;again!  &lt;/p&gt;
&lt;p&gt;On the other hand, now I can read code in two OSes. Sure is interesting
dereferencing all those&amp;nbsp;pointers!  &lt;/p&gt;
&lt;p&gt;Quantizing spacetime is fun,&amp;nbsp;though!&lt;/p&gt;</summary><category term="quantum gravity"></category><category term="vmware"></category><category term="ubuntu"></category><category term="cdt"></category></entry><entry><title>Causal Dynamical Triangulations updates</title><link href="http://adamgetchell.org/causal-dynamical-triangulation.html" rel="alternate"></link><updated>2008-08-01T08:27:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-08-01:causal-dynamical-triangulation.html</id><summary type="html">&lt;p&gt;The papers to read to get started:&lt;br /&gt;
&lt;a href="http://arxiv.org/abs/hep-th/0212340"&gt;&lt;br /&gt;
A discrete history of the Lorentzian path
integral&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://arxiv.org/hep-th/0505154"&gt;&lt;br /&gt;
&lt;/a&gt;&lt;a href="http://arxiv.org/abs/hep-th/0505154"&gt;Reconstructing the&amp;nbsp;Universe&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Then the usual:&lt;br /&gt;
&lt;a href="http://arxiv.org/abs/hep-th/0105267"&gt;&lt;br /&gt;
Dynamically Triangulating Lorentzian Quantum
Gravity&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://arxiv.org/abs/hep-th/0404156"&gt;&lt;br /&gt;
Emergence of a 4D World from Causal Quantum&amp;nbsp;Gravity&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/abs/hep-th/0411152"&gt;Semiclassical Universe from First
Principles&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://arxiv.org/abs/hep-th/0505113"&gt;&lt;br /&gt;
Spectral dimension of the&amp;nbsp;Universe&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;(Thanks to this
&lt;a href="http://www.physicsforums.com/showpost.php?p=585294&amp;amp;postcount=59"&gt;post&lt;/a&gt;
from&amp;nbsp;Marcus)  &lt;/p&gt;
&lt;p&gt;And finally, the &lt;a href="http://arxiv.org/find/all/1/all:+AND+triangulations+AND+causal+dynamical/0/1/0/all/0/1"&gt;current
literature&lt;/a&gt;
on&amp;nbsp;ArXiv.&lt;/p&gt;</summary><category term="quantum gravity"></category><category term="cdt"></category></entry><entry><title>Are we living in a simulation?</title><link href="http://adamgetchell.org/are-we-living-in-simulation.html" rel="alternate"></link><updated>2008-05-05T02:24:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-05-05:are-we-living-in-simulation.html</id><summary type="html">&lt;p&gt;Today I came across one of Dr. Nick Bostrom&amp;#8217;s &lt;a href="http://www.simulation-argument.com/simulation.html"&gt;existential philosophy
papers&lt;/a&gt; regarding
life vs. sim-life (aka are we living in the&amp;nbsp;Matrix?).  &lt;/p&gt;
&lt;p&gt;To me, the really interesting question is the assumption of
substrate-independence (because I don&amp;#8217;t believe we&amp;#8217;re living in a
simulation, more on that in a bit) &amp;#8212; that
&lt;a href="http://en.wikipedia.org/wiki/Sentience"&gt;sentience&lt;/a&gt;,
&lt;a href="http://en.wikipedia.org/wiki/Sapience"&gt;sapience&lt;/a&gt;, and
&lt;a href="http://en.wikipedia.org/wiki/Self-awareness"&gt;self-awareness&lt;/a&gt; can arise
from any appropriately complex material, including computer processors.
Is there some minimal complexity bound for intelligence? (First, tell me
what you mean by
&lt;a href="http://www.math.temple.edu/%7Ewds/homepage/iq.pdf"&gt;intelligence&lt;/a&gt;.) On
one hand, we already know that a virus is just a particular aggregation
of molecules, and that any assemblage of those particular atoms will
exhibit the same viral behavior. On the other, does that extend to a
connection between viruses and the rest of the living world, and by
analogy, to bottom-up&amp;nbsp;intelligence?  &lt;/p&gt;
&lt;p&gt;Will computers be able to exhibit sentience, sapience, or&amp;nbsp;self-awareness?  &lt;/p&gt;
&lt;p&gt;As an aside, although most people seem to know Seth Lloyd&amp;#8217;s
&lt;a href="http://arxiv.org/abs/quant-ph/9908043"&gt;paper&lt;/a&gt; on the ultimate limits of
computing, I tend to prefer Warren D. Smith&amp;#8217;s &lt;a href="http://www.math.temple.edu/%7Ewds/homepage/fundphys.ps"&gt;Fundamental Physical
Limits on
Computation&lt;/a&gt; and
&lt;a href="http://www.math.temple.edu/%7Ewds/homepage/memorybound.ps"&gt;Fundamental physical limits on information
storage&lt;/a&gt; as
being more useful equation-wise (and he has very interesting papers on
&lt;a href="http://www.math.temple.edu/%7Ewds/homepage/jcj.pdf"&gt;election systems&lt;/a&gt;
and &lt;a href="http://www.math.temple.edu/%7Ewds/homepage/multisurv.pdf"&gt;voting&lt;/a&gt;,
which doesn&amp;#8217;t surprise me when it concludes that our current voting
system is nearly the worst mathematically possible, and that&lt;a href="http://www.math.temple.edu/%7Ewds/homepage/naturebees.pdf"&gt;Range
Voting&lt;/a&gt; is a
much better
&lt;a href="http://www.math.temple.edu/%7Ewds/homepage/SSpf.pdf"&gt;algorithm&lt;/a&gt;).  &lt;/p&gt;
&lt;p&gt;(Note that some the papers are in &lt;span class="caps"&gt;PS&lt;/span&gt; format, so you will need a
PostScript reader such as
&lt;a href="http://pages.cs.wisc.edu/%7Eghost/gsview/get49.htm"&gt;GSview&lt;/a&gt; along with
&lt;a href="http://pages.cs.wisc.edu/%7Eghost/"&gt;&lt;span class="caps"&gt;GPL&lt;/span&gt; Ghostscript&lt;/a&gt; to&amp;nbsp;read.)  &lt;/p&gt;
&lt;p&gt;Before I get too sidetracked, let me outline my reasoning for why I
don&amp;#8217;t believe we&amp;#8217;re living in a&amp;nbsp;simulation:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The total entropy/information of our Universe is bounded at &lt;a href="http://arxiv.org/PS_cache/arxiv/pdf/0801/0801.1847v1.pdf"&gt;\&amp;lt;
    10E123&lt;/a&gt;
    (due to the &lt;a href="http://en.wikipedia.org/wiki/Holographic_principle"&gt;Holographic
    principle&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;A simple quantum computer with 500 entangled pairs generates more
    information than could be simulated by any non-quantum computer in
    this Universe (2\^500 &gt;&gt; 10E123)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;If the Universe is not simulated to a quantum degree of accuracy,
    the simulation can be immediately exposed via &lt;a href="http://en.wikipedia.org/wiki/Bell%27s_theorem"&gt;Bell&amp;#8217;s&amp;nbsp;inequality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Thus, in order to create a virtual universe sufficient to withstand
    experimental quantum physics tests, you need 10E123 qubits (e.g.,
    the&amp;nbsp;Universe)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyways, this is a very interesting topic, but I should continue my
sidetracking avoidance and get back to my&amp;nbsp;research.&lt;/p&gt;
&lt;/p&gt;</summary><category term="information theory"></category><category term="qft"></category><category term="voting"></category></entry><entry><title>Cosmology and Quantitative Biology</title><link href="http://adamgetchell.org/cosmology-and-quantitative-biology.html" rel="alternate"></link><updated>2008-01-23T08:02:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-01-23:cosmology-and-quantitative-biology.html</id><summary type="html">&lt;p&gt;Went to an interesting seminar today about detecting traces of the
reheat portion of the Hot Big Bang (the part that occurs after
inflation), papers not yet out on arxiv (links posted here when they
come&amp;nbsp;out).  &lt;/p&gt;
&lt;p&gt;The interesting bits to relay back here&amp;nbsp;are:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Any symmetry breaking (Higgs, for example) invariably generates
gravity waves. Thus, it&amp;#8217;s possible for to use gravity waves to probe all
the way back to inflation, 10E-35&amp;nbsp;seconds.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These gravity waves can be, in principle, detected by tabletop sized
experiments! (There&amp;#8217;s a group trying to do that now). Unfortunately,
there are issues of sensitivity that will make this rather difficult,
but perhaps by, oh, 2020 we may detect relic gravity waves in the same
way we&amp;#8217;ve already detected the &lt;span class="caps"&gt;CMB&lt;/span&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another cosmic relic is leftover magnetic fields, of which theory
predicts their strength and scale should be equivalent to what we&amp;#8217;re
seeing today as galactic and intragalactic magnetic&amp;nbsp;fields.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our guest seemed to expect to see copious production of strings and
textures, which should be signified by their gravitational traces and
provides further experimental tests of the
&lt;a href="http://physicsworld.com/cws/article/print/30940"&gt;stringscape&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And in some other news, here&amp;#8217;s a &lt;a href="http://ptonline.aip.org/journals/doc/PHTOAD-ft/vol_61/iss_1/42_1.shtml"&gt;really fascinating
article&lt;/a&gt;
on bateriophages (viruses that infect bacteria) with some really nifty
discussion points related to our nanotech thread. I won&amp;#8217;t spoil the
article, it&amp;#8217;s well worth the read (it serves as a handy primer for
nanotech issues), but an interesting result is the calculation of
pressure inside the hard shell of a bateriophage, with experimental
support, which shows&amp;nbsp;that:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bacteriophages have double-helix &lt;span class="caps"&gt;DNA&lt;/span&gt; to serve as a spring to provide
packing&amp;nbsp;energy  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bacteriophages rely upon this pressure to propagate, at least
initially, into&amp;nbsp;bateria.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Viruses are basically mechanical, inanimate objects. They don&amp;#8217;t do
anything except replicate, and any inanimate matter assembled into the
particular protein configuration of a virus will behave like that virus;
on the flip side, viruses have the exact electrical properties of any
other similar-sized particle in a colloidal suspension.&lt;br /&gt;
&lt;a href="http://ptonline.aip.org/journals/doc/PHTOAD-ft/vol_61/iss_1/42_1.shtml"&gt;&lt;br /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="string theory"></category><category term="cosmology"></category><category term="quantitative biology"></category></entry><entry><title>Undecidability, Regularity, and Decoherence</title><link href="http://adamgetchell.org/undecidability-regularity-and.html" rel="alternate"></link><updated>2008-01-22T11:49:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-01-22:undecidability-regularity-and.html</id><summary type="html">&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/arxiv/pdf/0801/0801.2564v1.pdf"&gt;Modern space-time and undecidability&lt;br /&gt;
&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://en.wikipedia.org/wiki/Quantum_decoherence"&gt;Quantum&amp;nbsp;Decoherence&lt;/a&gt;&lt;/p&gt;</summary><category term="qft"></category><category term="general relativity"></category></entry><entry><title>Ultra-strong electric and magnetic fields, monopoles</title><link href="http://adamgetchell.org/ultra-strong-electric-and-magnetic.html" rel="alternate"></link><updated>2008-01-22T11:46:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2008-01-22:ultra-strong-electric-and-magnetic.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.amolf.nl/publications/pdf/4339.pdf"&gt;Response of Polyatomic Molecules to Ultrastrong Laser- and Ion-Induced&amp;nbsp;Fields&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/astro-ph/pdf/0002/0002442v1.pdf"&gt;Physics in Ultra-strong Magnetic&amp;nbsp;Fields&lt;/a&gt;&lt;/p&gt;</summary><category term="qft"></category></entry><entry><title>Dynamical Triangulations, SAGE</title><link href="http://adamgetchell.org/dynamical-triangulations-sage.html" rel="alternate"></link><updated>2007-12-10T19:09:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-12-10:dynamical-triangulations-sage.html</id><summary type="html">&lt;p&gt;The first paper I read for Causal Dynamical Triangulations is a fairly
steep introduction (for me), so I went and looked over the
&lt;a href="http://arxiv.org/abs/hep-th/9805108"&gt;2D&lt;/a&gt; case and
&lt;a href="http://arxiv.org/abs/hep-th/9806241"&gt;lessons&lt;/a&gt;, as well as a general
&lt;a href="http://relativity.livingreviews.org/Articles/lrr-1998-13/"&gt;review&lt;/a&gt; of&amp;nbsp;methods.  &lt;/p&gt;
&lt;p&gt;I&amp;#8217;m also looking at &lt;a href="http://www.sagemath.org/"&gt;&lt;span class="caps"&gt;SAGE&lt;/span&gt;&lt;/a&gt;, Software for
Algebra and Geometry Experimentation, a free mathematical programming
system using &lt;a href="http://www.python.org/"&gt;Python&lt;/a&gt; + a lot of open source
tools. On Windows, &lt;span class="caps"&gt;SAGE&lt;/span&gt;
&lt;a href="http://www.sagemath.org/SAGEbin/microsoft_windows/README.txt"&gt;requires&lt;/a&gt;
&lt;a href="http://www.vmware.com/products/player/"&gt;VMWare&lt;/a&gt; and uses firefox. You
can use it &lt;a href="https://sage.math.washington.edu:8103/login"&gt;online&lt;/a&gt;, but so
far it&amp;#8217;s rather slow, and appears to have been
&lt;a href="http://science.slashdot.org/science/07/12/08/1350258.shtml"&gt;slashdotted&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Impressive tool! Feels a lot like Mathematica, accessible via web
browser. The
&lt;a href="http://modular.math.washington.edu/sage/doc/html/tut/tut.html"&gt;tutorial&lt;/a&gt;
is well-worth running through (I used the on-line version while
upgrading my local install, but the local version allows you to run the
calculation cells using Shift-Enter&amp;nbsp;).  &lt;/p&gt;
&lt;p&gt;For example, &lt;span class="caps"&gt;SAGE&lt;/span&gt; extends Python to handle
&lt;a href="http://en.wikipedia.org/wiki/Ring_%28mathematics%29"&gt;rings&lt;/a&gt; and
&lt;a href="http://en.wikipedia.org/wiki/P-adic_number"&gt;p-adic&lt;/a&gt; numbers (which I
learned, should always have a prime number base to avoid the
zero-divisor&amp;nbsp;problem).  &lt;/p&gt;
&lt;p&gt;Adding dvipng &lt;span class="caps"&gt;SAGE&lt;/span&gt; package requires adding ghostscript, via apt-get
install gs.&lt;br /&gt;
Also requires libkpathsea, which requires tetex via apt-get install&amp;nbsp;tetex-extra  &lt;/p&gt;
&lt;p&gt;PostScript: the &lt;span class="caps"&gt;SAGE&lt;/span&gt; dvipng package doesn&amp;#8217;t work, but apt-get install
dvipng puts dvipng on the system, which should&amp;nbsp;suffice.  &lt;/p&gt;
&lt;p&gt;Note: &lt;span class="caps"&gt;SAGE&lt;/span&gt; runs on Edgy, and can be updated to Feisty by using
update-manager-core as described
&lt;a href="http://www.ubuntu.com/getubuntu/upgrading"&gt;here&lt;/a&gt;. The
&lt;a href="http://groups.google.com/group/sage-support"&gt;&lt;span class="caps"&gt;SAGE&lt;/span&gt;-support&lt;/a&gt; group is
available on Google&amp;nbsp;Groups.  &lt;/p&gt;
&lt;p&gt;PostScript: &lt;span class="caps"&gt;SAGE&lt;/span&gt; can be upgraded to Gutsy, I used the Upgrade Manager
available in Xubuntu (I wanted a &lt;span class="caps"&gt;GUI&lt;/span&gt; for some &lt;span class="caps"&gt;SAGE&lt;/span&gt; file management via
apt-get install&amp;nbsp;xubuntu-desktop)  &lt;/p&gt;
&lt;p&gt;Doesn&amp;#8217;t work yet on &lt;span class="caps"&gt;BSD&lt;/span&gt;, alas, and running a &lt;span class="caps"&gt;SAGE&lt;/span&gt; server has security&amp;nbsp;implications.&lt;/p&gt;</summary><category term="SAGE"></category><category term="cdt"></category><category term="python"></category><category term="vmware"></category><category term="ubuntu"></category></entry><entry><title>ProjectEuler on F#</title><link href="http://adamgetchell.org/projecteuler-on-f.html" rel="alternate"></link><updated>2007-11-19T09:24:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-11-19:projecteuler-on-f.html</id><summary type="html">&lt;p&gt;So, whilst poring through Pickering&amp;#8217;s book and browsing through &lt;a href="http://tomasp.net/about/fsharp.aspx"&gt;Tomas
Petricek&amp;#8217;s blog&lt;/a&gt; (which has a
promising &lt;a href="http://tomasp.net/articles/fswebtools-intro.aspx"&gt;F# &lt;span class="caps"&gt;AJAX&lt;/span&gt;
toolkit&lt;/a&gt;, which alas,
doesn&amp;#8217;t work yet) and stealing glances at the &lt;a href="http://caml.inria.fr/pub/docs/oreilly-book/html/index.html"&gt;O&amp;#8217;Reilly online &lt;span class="caps"&gt;OCAML&lt;/span&gt;
book&lt;/a&gt;, I
decided to write some programs to exercise my understanding of the
material. After some stumbling, I found &lt;a href="http://projecteuler.net/index.php?section=problems"&gt;Project
Euler&lt;/a&gt;, a great site
full of math programming&amp;nbsp;puzzles.  &lt;/p&gt;
&lt;p&gt;I solved &lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=1"&gt;Problem
#1&lt;/a&gt; naively in
\~ 10 lines of F# using list comprehensions and recursion (I&amp;#8217;ve seen a
one-liner using Seq.fold). &lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=2"&gt;Problem
#2&lt;/a&gt; builds on
this and takes about 30, including a debugging function to print results
(&lt;a href="http://blogs.msdn.com/chrsmith/archive/2007/10/26/Project-Euler-in-F_2300_-_2D00_-Problem-2.aspx"&gt;better
solutions&lt;/a&gt;,
using Seq.unfold, do it in 10). I posted my code solutions to the
&lt;a href="http://projecteuler.net/index.php?section=forum"&gt;forum&lt;/a&gt;, so as not to
spoil anyone else&amp;#8217;s fun (you can only post to the forum for that problem
after you&amp;#8217;ve solved it). It&amp;#8217;s very interesting to see all of the other
solutions in different languages, and the algorithm discussion is
fascinating&amp;nbsp;too.  &lt;/p&gt;
&lt;p&gt;It&amp;#8217;s also quite impressive how easily F# morphs into math problems
(though I am still writing some horrid C#/F# hybrid&amp;nbsp;presently).  &lt;/p&gt;
&lt;p&gt;Oh, and here&amp;#8217;s a nifty 100-line podcast downloader,
&lt;a href="http://dcooney.com/ViewEntry.aspx?ID=499"&gt;slurppodcasts&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;(Note that &lt;span style="color: rgb(51, 51, 255);"&gt;Idioms.using&lt;/span&gt; is
no longer necessary, since &lt;span
style="color: rgb(51, 51, 255);"&gt;using&lt;/span&gt; is integrated into&amp;nbsp;F#)  &lt;/p&gt;
&lt;p&gt;Finally, here&amp;#8217;s &lt;a href="http://feeds.feedburner.com/planet_fsharp"&gt;Feedburner&amp;#8217;s Planet
F#&lt;/a&gt;.&lt;/p&gt;</summary><category term=".net"></category><category term="f#"></category></entry><entry><title>F#, Regge Calculus, and other interludes</title><link href="http://adamgetchell.org/f-regge-calculus-and-other-interludes.html" rel="alternate"></link><updated>2007-11-19T05:39:00-08:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-11-19:f-regge-calculus-and-other-interludes.html</id><summary type="html">&lt;p&gt;Still working on &lt;a href="http://adamgetchell.blogspot.com/2007_10_01_archive.html"&gt;Causal Dynamical
Triangulations&lt;/a&gt;,
I&amp;#8217;ve also taken some time out to (start to) learn a delightful new
functional programming language,
&lt;a href="http://research.microsoft.com/fsharp/fsharp.aspx"&gt;F#&lt;/a&gt;, with the help
of a good &lt;a href="http://cs.hubfs.net/"&gt;site&lt;/a&gt;, online
&lt;a href="http://www.ffconsultancy.com/products/fsharp_journal/"&gt;journal&lt;/a&gt;, and
this &lt;a href="http://strangelights.com/"&gt;book&lt;/a&gt;. Mixing functional, imperative,
and object-oriented programming with good mathematics features and the
.&lt;span class="caps"&gt;NET&lt;/span&gt; framework allows me to blend work and academics. The goal is to
write a first-cut &lt;span class="caps"&gt;CDT&lt;/span&gt; program in F# and refine as necessary&amp;nbsp;&amp;#8230;.  &lt;/p&gt;
&lt;p&gt;CDTs depend upon &lt;a href="http://en.wikipedia.org/wiki/Regge_calculus"&gt;Regge
calculus&lt;/a&gt;, which is
essentially a prescribed way for dividing up spacetime into a discrete
lattice (simplexes) while adhering to the Einstein field equations.
(Regge calculus is explained in detail in Chapter 41 of &lt;a href="http://www.amazon.com/Gravitation-Physics-Kip-S-Thorne/dp/0716703440/ref=ed_oe_p/002-3874810-3091246"&gt;Gravitation,
aka the Big Black
Book&lt;/a&gt;.)  &lt;/p&gt;
&lt;p&gt;In particular, you divide up a smooth 4-manifold into a collection of
4-d simplexes, in the same way you can divide up a 3-sphere into the
(2-)triangles of the icosohedron. If you pressed the icosohedron
perfectly flat onto a plane, you would see &lt;span
style="font-style: italic;"&gt;deficit angles&lt;/span&gt; or &lt;span
style="font-style: italic;"&gt;hinges&lt;/span&gt; that essentially reflect the
its spherical curvature. In the same way, you analyze the simplices of
the 4-d manifold to determine its&amp;nbsp;curvature.  &lt;/p&gt;
&lt;p&gt;If you are extraordinarily careful in how you setup your lattice, you
can perfectly constrain your volume using just fixed edge lengths. (For
example, a &lt;a href="http://en.wikipedia.org/wiki/Tessellation"&gt;tiling&lt;/a&gt; of
triangles constrains a surface rigidly, because the tiling cannot be
deformed without changing edge lengths. A tiling of squares does not,
because the squares can be squashed sideways into parallelograms without
changing their edge&amp;nbsp;lengths.)  &lt;/p&gt;
&lt;p&gt;And if you do this, you can now examine that volume (or brane, or bulk )
by solving the Einstein equations expressed in terms of conditions on
the hinge angles (which are themselves functions only of the edge
lengths). This is exciting because you can now program a computer
(carefully) to solve problems that don&amp;#8217;t lend themselves to analytic
solution, which allows you to do interesting&amp;nbsp;things:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/gr-qc/pdf/0506/0506071v2.pdf"&gt;Discrete quantum gravity in the framework of Regge calculus&amp;nbsp;formalism&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;In the past few weeks, I&amp;#8217;ve also taken time to read up on a few areas of&amp;nbsp;interest.  &lt;/p&gt;
&lt;p&gt;Perhaps one of the more interesting recent occurrences is the recent
re-examination of the 2nd law of thermodynamics, long thought to be
inviolable and one of the most solid foundations of physics by such
luminaries as Maxwell, Einstein, Eddington, and&amp;nbsp;Brilloun.  &lt;/p&gt;
&lt;p&gt;Physics is always fun, check your assumptions at the&amp;nbsp;door!  &lt;/p&gt;
&lt;p&gt;First, a nice publicly accessible&amp;nbsp;summary:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/PS_cache/cond-mat/pdf/0208/0208291v1.pdf"&gt;Why Do We Believe in the Second
Law?&lt;/a&gt;, T.&amp;nbsp;Duncan  &lt;/p&gt;
&lt;p&gt;The &lt;span style="font-style: italic;"&gt;Foundations of Physics&lt;/span&gt;
journal, Volume 37, Number 12/December 2007 is devoted to this
extraordinary topic (unfortunately, e-journal subscriptions required to
view), starting with Geraard t&amp;#8217;Hooft&amp;#8217;s
&lt;a href="http://springerlink.metapress.com/content/4275497r4v43823p/fulltext.pdf"&gt;editorial&lt;/a&gt;,
which gives a broad summary of the scope of the papers in the&amp;nbsp;journal.  &lt;/p&gt;
&lt;p&gt;Next, we have:&lt;br /&gt;
&lt;a href="http://springerlink.metapress.com/content/lhj15642v3445722/fulltext.pdf"&gt;&lt;br /&gt;
The Second Law of Thermodynamics: Foundations and
Status&lt;/a&gt;,
by &lt;span class="caps"&gt;D.P.&lt;/span&gt;&amp;nbsp;Sheehan  &lt;/p&gt;
&lt;p&gt;This paper gives a broad overview on three classes of discussion
regarding the Second Law now underway: ideal gases, quantum
perspectives, and&amp;nbsp;interpretations.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://springerlink.metapress.com/content/c505876828551152/fulltext.pdf"&gt;Information Loss as a Foundational Principle for the Second Law of
Thermodynamics&lt;/a&gt;,
by &lt;span class="caps"&gt;T.L.&lt;/span&gt; Duncan and &lt;span class="caps"&gt;J.S.&lt;/span&gt;&amp;nbsp;Semura  &lt;/p&gt;
&lt;p&gt;This paper explores in detail the concept of information loss as being
the fundamental explanation for entropy, essentially casting the 2nd law
from &amp;#8220;Entropy always increases for irreversible processes&amp;#8221; to
&amp;#8220;Information is always lost for irreversible processes&amp;#8221;. The authors
further argue that all classical derivations of the 2nd law using
&amp;#8220;entropy&amp;#8221; actually incorporate, explicitly or implicitly, information
loss as the&amp;nbsp;mechanism.  &lt;/p&gt;
&lt;p&gt;As an example, &lt;a href="http://en.wikipedia.org/wiki/Maxwell%27s_demon"&gt;Maxwell&amp;#8217;s
demon&lt;/a&gt; is shown to be
able to violate the 2nd law on the basis of having information &amp;#8212; in
particular, knowing how to sort fast-moving from slow-moving particles.
However, creation of that information eventually involves the deletion
of a bit of information from storage &amp;#8212; for a subsequent Kln2 energy
cost &amp;#8212; which is argued as being the source of entropy. (All faults are
mine, not the authors, if I&amp;#8217;ve paraphrased these arguments&amp;nbsp;incorrectly.)  &lt;/p&gt;
&lt;p&gt;Jean E. Burns, in &lt;a href="http://springerlink.metapress.com/content/67143288r1652w14/fulltext.pdf"&gt;Vacuum Radiation, Entropy, and Molecular
Chaos&lt;/a&gt;,
makes a very interesting extension to classical entropy models for
isolated systems. Classical thermodynamic models separate the system
from the environment. The canonical example is the refrigerator, which
decreases temperature (thus entropy) locally, but at the expense of
expelling even more heat (thus increasing entropy) in the environment.
The entropy/heat loss inside the system is outweighed by the
entropy/heat gain in the&amp;nbsp;environment.  &lt;/p&gt;
&lt;p&gt;However, what happens for an arbitrarily large system (such as the
universe), where there is no external reservoir? Burns argues that
vacuum radiation provides the mechanism for entropy&amp;nbsp;increase.  &lt;/p&gt;
&lt;p&gt;Perhaps of most interest to biologists and science-fiction fans is
Sheehan&amp;#8217;s &lt;a href="http://springerlink.metapress.com/content/9km828746w91p011/fulltext.pdf"&gt;Thermosynthetic
Life&lt;/a&gt;,
which postulates the existence of life forms deriving their energy
solely from thermal energy. In addition to searches for extremophile
lifeforms (such as bacteria near volcanic vents) that fit this profile,
it provides an engaging test into the 2nd Law, because such life-forms
may well violate&amp;nbsp;it!  &lt;/p&gt;
&lt;p&gt;And, continuing on with our examinations into entropy and information
theory, we&amp;nbsp;have:  &lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;/span&gt;&lt;a href="http://www.worldscinet.com/ijmpd/mkt/preserved-docs/1512/S0218271806009765.pdf"&gt;Information Recovery
from Black
Holes&lt;/a&gt;,
V. Balasubramanian, D. Marolf, and M.&amp;nbsp;Rozali  &lt;/p&gt;
&lt;p&gt;This first-place prizewinning essay of the 2006 Essay Competition of the
Gravity Research Foundation provides insights into two crucial&amp;nbsp;questions:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Why do classical black holes have finite entropy equal to a quarter
    of the horizon&amp;nbsp;area?&lt;/li&gt;
&lt;li&gt;How does information escape from an evaporating black&amp;nbsp;hole?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In essence (modulo a great many technical arguments), the answer to both
of these questions is that the finite mass black hole, representing a
finite number of energy states N, therefore possesses a discrete energy
spectrum. In general, discrete spectra are quantum-mechanically
non-degenerate, so knowledge of the precise energy and other (commuting)
conserved charges determines the quantum state. But General Relativity
charges are generically given by boundary terms; thus, the entire state
of the black hole resides in the boundary (asymptotic region), available
to all&amp;nbsp;observers.  &lt;/p&gt;
&lt;p&gt;This is at odds with classical &lt;span class="caps"&gt;GR&lt;/span&gt;, because there exist unobservable
regions within the black hole that are causally separated. However, in
the quantum mechanical case the Heisenberg Uncertainty principle
dictates that a &amp;#8220;Heisenberg recurrence time&amp;#8221; exists. This can be thought
of as a sort of spontaneous large thermal fluctuation in which the black
hole may be replaced by a ball of expanding hot gas. Although the gas
will re-collapse to form another black hole on a relatively short time
scale, during the span of its existence the full details of the black
hole&amp;#8217;s internal state are visible from&amp;nbsp;infinity.  &lt;/p&gt;
&lt;p&gt;And thus we see that at the quantum level, the event horizon becomes
ill-defined, and quantum mechanics, entropy, and information theory
collaborate against General Relativity to allow what was previously
thought to be&amp;nbsp;impossible.  &lt;/p&gt;
&lt;p&gt;And in a final bit of fun, we see a method for efficiently converting
black holes into gravitational waves:&lt;br /&gt;
&lt;a href="http://www.worldscinet.com/ijmpd/mkt/free/S0218271806009625.html"&gt;&lt;br /&gt;
Black Hole Bremsstrahlung: Can it be an efficient source of
gravitational&amp;nbsp;waves?&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Taking a 2 solar mass black hole traveling at .38c and converting 90% of
its rest mass into a lobe-shaped pulse with width deltaU \~ 40 for 10E40
GeV\^2 sounds&amp;nbsp;exciting!&lt;/p&gt;
&lt;/p&gt;</summary><category term="cdt"></category><category term=".net"></category><category term="information theory"></category><category term="thermodynamics"></category><category term="quantum mechanics"></category><category term="f#"></category></entry><entry><title>Holomorphy and friends</title><link href="http://adamgetchell.org/holomorphy-and-friends.html" rel="alternate"></link><updated>2007-10-03T04:48:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-10-03:holomorphy-and-friends.html</id><summary type="html">&lt;p&gt;I&amp;#8217;m reading Chapter 8 of &lt;a href="http://particle.physics.ucdavis.edu/modernsusy/index.html"&gt;Modern
Supersymmetry&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;To understand the first sentence, I had to review Maldacena&amp;#8217;s
&lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/9711/9711200v3.pdf"&gt;paper&lt;/a&gt;, which
(not-so) incidentally proposed the AdS/&lt;span class="caps"&gt;CFT&lt;/span&gt; correspondence (hence its
numerous
&lt;a href="http://www.slac.stanford.edu/spires/topcites/2006/alltime.shtml"&gt;citations&lt;/a&gt;).  &lt;/p&gt;
&lt;p&gt;Hmmm. I&amp;#8217;ll have to read it again. ;-) But moving on&amp;nbsp;&amp;#8230;  &lt;/p&gt;
&lt;p&gt;Okay, now need to review &lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/9905/9905111v3.pdf"&gt;non-renormalization
theorems&lt;/a&gt; and
&lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/9802/9802109v2.pdf"&gt;Wilsonian effective
action&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Wow, lots to&amp;nbsp;catchup!&lt;/p&gt;</summary><category term="string theory"></category><category term="SUSY"></category></entry><entry><title>Quantum Parallel Universes</title><link href="http://adamgetchell.org/quantum-parallel-universes.html" rel="alternate"></link><updated>2007-09-28T06:35:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-28:quantum-parallel-universes.html</id><summary type="html">&lt;p&gt;Professor Andy Albrecht has kindly pointed me to one of a series of
papers by David Deutsch that begins the proof of Hugh Everett&amp;#8217;s
&lt;a href="http://plato.stanford.edu/entries/qm-manyworlds/"&gt;Many-World&amp;#8217;s
Hypothesis&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/ftp/quant-ph/papers/9906/9906015.pdf"&gt;Quantum Theory of Probability and&amp;nbsp;Decisions&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;This paper removes the requirement to have a probabilistic&lt;br /&gt;
interpretation of quantum mechanics, instead casting it into a&lt;br /&gt;
non-probabilistic decision theory&amp;nbsp;basis.  &lt;/p&gt;
&lt;p&gt;The main result is that the usual probabilistic formulation can be&lt;br /&gt;
replaced by a rational decision maker using classic decision theory.&lt;br /&gt;
Furthermore (and most importantly), quantum processes whose outcomes&lt;br /&gt;
look stochastic can be replaced by deterministic evolution of&amp;nbsp;states.  &lt;/p&gt;
&lt;p&gt;Note that this neatly removes the issues around definitions of
probability in the &lt;span class="caps"&gt;MWI&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;I&amp;#8217;m now taking, for fun, an advanced
&lt;a href="http://particle.physics.ucdavis.edu/modernsusy/index.html"&gt;Supersymmetry&lt;/a&gt;
&lt;a href="http://particle.physics.ucdavis.edu/teaching/246B/index.php"&gt;class&lt;/a&gt;,
taught by Prof. John Terning, which picks up where my last &lt;span class="caps"&gt;SUSY&lt;/span&gt; class
left off. Wow, I need to
&lt;a href="http://particle.physics.ucdavis.edu/teaching/246/index.php"&gt;review&lt;/a&gt;!&lt;/p&gt;</summary><category term="qft"></category><category term="SUSY"></category></entry><entry><title>A new direction</title><link href="http://adamgetchell.org/new-direction.html" rel="alternate"></link><updated>2007-09-23T22:07:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-23:new-direction.html</id><summary type="html">&lt;p&gt;After a long hiatus, I&amp;#8217;m back&amp;nbsp;&amp;#8230;  &lt;/p&gt;
&lt;p&gt;Back to what? Well, most of that hiatus was due to work, and I already
keep a (boring) work journal. But the main thing is I&amp;#8217;m back to doing
physics&amp;nbsp;&amp;#8230;  &lt;/p&gt;
&lt;p&gt;The goal is to start (and finish) a dissertation in Computational
Quantum Gravity. What does that mean, exactly? Well, that&amp;#8217;s the whole
point of the journey &amp;#8212; and this blog will help me track my progress. It
may not be that interesting to you to read, but it will be useful for me
to write, and keep notes, with. And a goal left unstated is left
undone &amp;#8212; that&amp;#8217;s why it&amp;#8217;s all hanging out&amp;nbsp;here.  &lt;/p&gt;
&lt;p&gt;So the first order of business is to get really &lt;a href="http://www.ctan.org/tex-archive/info/lshort/english/lshort.pdf"&gt;comfortable with
LaTeX&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Next, it would be really nice to be able to post equations here. Oh,
looks like someone&amp;#8217;s already &lt;a href="http://wolverinex02.googlepages.com/emoticonsforblogger2"&gt;hacked that
together&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;The Einstein&amp;nbsp;equation:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Einstein Equation" src="http://www.forkosh.dreamhost.com/mimetex.cgi?G_%7B%5Calpha%20%5Cbeta%7D%20=%20T_%7B%5Calpha%20%5Cbeta%7D" /&gt;  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a really good intro summary on the state of the art on quantum&amp;nbsp;gravity:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://plato.stanford.edu/entries/quantum-gravity/"&gt;http://plato.stanford.edu/entries/quantum-gravity/&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;With a reference to the&amp;nbsp;classics:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://math.ucr.edu/home/baez/einstein/einstein.html"&gt;http://math.ucr.edu/home/baez/einstein/einstein.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://math.ucr.edu/home/baez/gr/gr.html"&gt;http://math.ucr.edu/home/baez/gr/gr.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Well, that should be enough to start with this&amp;nbsp;weekend!&lt;/p&gt;</summary><category term="quantum gravity"></category></entry><entry><title>Fun with Microsoft’s Enterprise Library</title><link href="http://adamgetchell.org/fun-with-microsofts-enterprise-library.html" rel="alternate"></link><updated>2007-09-22T23:42:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:fun-with-microsofts-enterprise-library.html</id><summary type="html">&lt;p&gt;Oh yeah, back to my day-job: I&amp;#8217;m a&amp;nbsp;programmer.  &lt;/p&gt;
&lt;p&gt;So we&amp;#8217;ve got a new application to update the current stone-tablet
process in the University that determines if students actually&amp;nbsp;graduate.  &lt;/p&gt;
&lt;p&gt;Now, I like to write good code, and furthermore, if someone else writes
it for me, that&amp;#8217;s even better. So if you are working on the .&lt;span class="caps"&gt;NET&lt;/span&gt;
platform, you&amp;#8217;d do well to look at the &lt;a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=0325B97A-9534-4349-8038-D56B38EC394C&amp;amp;displaylang=en"&gt;Enterprise
Library&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Of course, this is several thousand lines of code to pore over, good
stuff, but unfortunately we have these minor annoying things called
deadlines which prevents us from taking the time to grok everything&amp;nbsp;properly.  &lt;/p&gt;
&lt;p&gt;Come to think of it, this happens in Physics, too &amp;#8212; I never have enough
time to actually understand all the details of the problems I&amp;#8217;m supposed
to be solving, but my advisor assures me that this is the proper state
of things in research, as opposed to writing text books, and three
guesses as to which one gets you&amp;nbsp;tenure.  &lt;/p&gt;
&lt;p&gt;Back to the matter at hand &amp;#8212; the Enterprise Library. Looking around at
some good &lt;a href="http://blog.hishambaz.com/archive/2005/01/29/194.aspx"&gt;working
examples&lt;/a&gt; ,
hilarity and pandemonium ensues when you try to do something simple like
write to the Event Log when your application barfs. (Did I mention this
doesn&amp;#8217;t come up a lot because instrumenting software seems to be a &amp;#8230;
novelty?) I&amp;#8217;m pretty sure that developers should &lt;span
style="font-weight: bold;"&gt;not&lt;/span&gt; be doing things like editing the
Registry, installing Services, or setting accounts programs run under
with full admin rights &amp;#8212; I was a system administrator in a previous
job, and I &lt;span style="font-weight: bold;"&gt;hated&lt;/span&gt; letting
programmers do those kind of&amp;nbsp;things.  &lt;/p&gt;
&lt;p&gt;So I won&amp;#8217;t inflict the same damage on our own, long-suffering&amp;nbsp;sysadmin.  &lt;/p&gt;
&lt;p&gt;Now, my 52-line class solution doesn&amp;#8217;t do all the bells and whistles the
&lt;span class="caps"&gt;EL&lt;/span&gt; does, but it sure doesn&amp;#8217;t require all the nastiness&amp;nbsp;above:  &lt;/p&gt;
&lt;div class="cf"&gt;

&lt;span class="cb1"&gt;using&lt;/span&gt; System;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Diagnostics;

 

&lt;span class="cb1"&gt;namespace&lt;/span&gt; &lt;span class="caps"&gt;CAESDO&lt;/span&gt;

{

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Methods to handle
error reporting&lt;/span&gt;

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

    &lt;span class="cb1"&gt;public&lt;/span&gt; &lt;span class="cb1"&gt;class&lt;/span&gt;
ErrorHandler

    {

        &lt;span class="cb1"&gt;public&lt;/span&gt; ErrorHandler()

        {

            &lt;span class="cb3"&gt;// Register application as source for
Application log&lt;/span&gt;

            &lt;span class="cb1"&gt;if&lt;/span&gt;
(!EventLog.SourceExists(&amp;#8220;FacultyStudentSurveys&amp;#8221;))

                EventLog.CreateEventSource(&amp;#8220;FacultyStudentSurveys&amp;#8221;,
&amp;#8220;Application&amp;#8221;);

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Writes an error
message to the Application Event Log&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;param name="error"\&gt;&lt;/span&gt;&lt;span class="cb3"&gt;The thrown
exception&lt;/span&gt;&lt;span class="cb2"&gt;\&lt;/param\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
WriteToEventLog(Exception error)

        {

            &lt;span class="cb1"&gt;const&lt;/span&gt; &lt;span
class="cb1"&gt;string&lt;/span&gt; source = &amp;#8220;Commencement&amp;#8221;;

            &lt;span class="cb1"&gt;const&lt;/span&gt; &lt;span
class="cb1"&gt;string&lt;/span&gt; logName = &amp;#8220;Application&amp;#8221;;

            EventLogEntryType enumType = EventLogEntryType.Error;

 

            EventLog objectLog = &lt;span class="cb1"&gt;new&lt;/span&gt;
EventLog(logName);

            objectLog.Source = source;

            objectLog.WriteEntry(error.Message, enumType, 1 );

        }

 

        &lt;span class="cb1"&gt;internal&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
WriteToEventLog(&lt;span class="cb1"&gt;string&lt;/span&gt; message, &lt;span
class="cb1"&gt;bool&lt;/span&gt; success)

        {

            &lt;span class="cb1"&gt;const&lt;/span&gt; &lt;span
class="cb1"&gt;string&lt;/span&gt; source = &amp;#8220;Commencement&amp;#8221;;

            &lt;span class="cb1"&gt;const&lt;/span&gt; &lt;span
class="cb1"&gt;string&lt;/span&gt; logName = &amp;#8220;Application&amp;#8221;;

            EventLogEntryType enumType;

 

            &lt;span class="cb1"&gt;if&lt;/span&gt; (success)

            {

                enumType = EventLogEntryType.Information;

            }

            &lt;span class="cb1"&gt;else&lt;/span&gt;

            {

                enumType = EventLogEntryType.Error;

            }

            EventLog objectLog = &lt;span class="cb1"&gt;new&lt;/span&gt;
EventLog(logName);

            objectLog.Source = source;

            objectLog.WriteEntry(message, enumType);

        }

    }

}

&lt;/div&gt;

&lt;p&gt;I&amp;#8217;m sure I&amp;#8217;ve missed something obvious.&amp;nbsp;Anyone?  &lt;/p&gt;
&lt;p&gt;I just got a reply from the Hisam Baz, author of the above weblog which
says, &amp;#8220;Why write 52 lines of code when you can write&amp;nbsp;1?&amp;#8221;.  &lt;/p&gt;
&lt;p&gt;To which I reply, &amp;#8220;I&amp;#8217;d be happy to write 1 line of code &amp;#8212; if it&amp;nbsp;works.&amp;#8221;  &lt;/p&gt;
&lt;p&gt;Which brings us to the second&amp;nbsp;problem:  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Non-portable references to the Global
Assembly Cache in &lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Once you actually try to use the Enterprise Library, you&amp;#8217;ll often come
across this bit of&amp;nbsp;advice:  &lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;&lt;span style="font-weight: bold; font-style: italic;"&gt;References  &lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;span style="font-style: italic;"&gt;Then from your application, add
references to
Microsoft.Practices.EnterpriseLibrary.Configuration.dll&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;and
Microsoft.Practices.EnterpriseLibrary.Logging.dll from the C:\Program
Files\Microsoft Enterprise Library\bin\ directory. You should
consider signing the assemblies and then adding them to the &lt;span class="caps"&gt;GAC&lt;/span&gt;. You
should also add a copy of the assemblies to C:\Program Files\Microsoft
Visual Studio .&lt;span class="caps"&gt;NET&lt;/span&gt; 2003\Common7\&lt;span class="caps"&gt;IDE&lt;/span&gt;. Once you do that, you can select
the assemblies directly from the &amp;#8220;Add Reference&amp;#8221; dialog. One you&amp;#8217;ve
added the reference, then add the appropriate using statement - using
Microsoft.Practices.EnterpriseLibrary.Logging - to your&amp;nbsp;code.&amp;#8221;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;There&amp;#8217;s only one problem &amp;#8212; it doesn&amp;#8217;t&amp;nbsp;work.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When Visual Studio 2003 .&lt;span class="caps"&gt;NET&lt;/span&gt; looks for references in the Global
Assembly Cache, it never updates its view of the &lt;span class="caps"&gt;GAC&lt;/span&gt; in response to what
you&amp;#8217;ve added &amp;#8212; that&amp;#8217;s done by the
&lt;a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;306149"&gt;registry&lt;/a&gt;
(bleah). Which is why you&amp;#8217;ve got to add a copy where &lt;span class="caps"&gt;VS&lt;/span&gt; can find&amp;nbsp;it.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When writing &lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; applications, references should be against
assemblies in the webserver &lt;span class="caps"&gt;GAC&lt;/span&gt;. And naturally, installer projects
written in &lt;span class="caps"&gt;VS&lt;/span&gt; 2003 do not install the files in the &lt;span class="caps"&gt;GAC&lt;/span&gt; automatically, as
they do for the web application itself. So now you have to manually add
assemblies to the &lt;span class="caps"&gt;GAC&lt;/span&gt; and write registry entries for each assembly to be
resolved by the .&lt;span class="caps"&gt;NET&lt;/span&gt;&amp;nbsp;runtime.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Wait, why are we &lt;a href="http://www.sellsbrothers.com/news/showTopic.aspx?ixTopic=1199"&gt;using the
&lt;span class="caps"&gt;GAC&lt;/span&gt;&lt;/a&gt;&amp;nbsp;again?  &lt;/p&gt;
&lt;p&gt;Okay, looks like I&amp;#8217;ll have to wade through &lt;a href="http://www.grimes.demon.co.uk/workshops/fusionWS.htm"&gt;Richard Grime&amp;#8217;s Fusion
Workshop&lt;/a&gt;. Except
that it doesn&amp;#8217;t cover the case I&amp;#8217;m interested in.&amp;nbsp;Joy.  &lt;/p&gt;
&lt;p&gt;Well, I sure hope that the 10 lines of code I&amp;#8217;ll end up emitting in this
exercise will exceed the several thousand I could be writing if I just
wrote everything&amp;nbsp;myself.  &lt;/p&gt;
&lt;p&gt;What&amp;#8217;s that again about the virtues of programmers? Laziness,
impatience, and hubris. Oh, alright&amp;nbsp;then.&lt;/p&gt;
&lt;/p&gt;</summary><category term=".net"></category></entry><entry><title>Fun with Microsoft Enterprise Library, part 2</title><link href="http://adamgetchell.org/fun-with-microsoft-enterprise-library.html" rel="alternate"></link><updated>2007-09-22T23:41:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:fun-with-microsoft-enterprise-library.html</id><summary type="html">&lt;p&gt;Okay, I can see that this is going to be a long series&amp;nbsp;&amp;#8230;.  &lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s what I&amp;#8217;m talking about on how to get Visual Studio to see
Enterprise Library assemblies without browsing (taken from the GotDotNet
workspace patterns &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; practices: Enterprise Library: Message&amp;nbsp;Boards):  &lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;&lt;span style="font-style: italic;"&gt;Do you want to see EntLib assemblies
in Add References message box?&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;Create a text file named entlib.reg,
and add this content:&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;Windows Registry Editor Version&amp;nbsp;5.00&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span
style="font-style: italic;"&gt;[HKEY_LOCAL_MACHINE\&lt;span class="caps"&gt;SOFTWARE&lt;/span&gt;\Microsoft\VisualStudio\7.1\AssemblyFolders\Enterprise
Library]&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;@=&amp;#8221;C:&amp;#92;Program Files&amp;#92;Microsoft
Enterprise&amp;nbsp;Library&amp;#92;bin&amp;#92;&amp;#8221;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;Double click on the file and you&amp;#8217;ll be
asked whether to add this registry key. Click yes, restart vs.net and
there you go.&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;(it is assumed that assemblies are in
their default folder - otherwise, change the path above).&lt;/span&gt;&amp;#8221;  &lt;/p&gt;
&lt;p&gt;Sigh. I really really try to avoid the Registry when&amp;nbsp;possible.  &lt;/p&gt;
&lt;p&gt;There&amp;#8217;s another neat trick for sorting out the structure of the
Enterprise Library: open one of the solutions in Visual Studio, select
Project-&gt; Visio &lt;span class="caps"&gt;UML&lt;/span&gt; -&gt; Reverse&amp;nbsp;Engineer.  &lt;/p&gt;
&lt;p&gt;Too bad all it actually does is generate a 75K blank Visio file, because
Visio is unable to resolve all of the&amp;nbsp;references.  &lt;/p&gt;
&lt;p&gt;I suppose this will work for code that&amp;#8217;s so simple that a &lt;span class="caps"&gt;UML&lt;/span&gt; diagram
isn&amp;#8217;t&amp;nbsp;needed.  &lt;/p&gt;
&lt;p&gt;Moving right along, I&amp;#8217;ve also found how to sign all of the Enterprise
Library Asemblies! You just generate your public/private key pair, and
then reference them in the GlobalAssemblyInfo.cs file&amp;nbsp;in:  &lt;/p&gt;
&lt;p&gt;C:\Program Files\Microsoft Enterprise Library\src&lt;br /&gt;
This file gets referenced by every project when it&amp;#8217;s compiled.&amp;nbsp;Yay!  &lt;/p&gt;
&lt;p&gt;Except that every project&amp;#8217;s AssemblyInfo.cs contains blank&amp;nbsp;references:  &lt;/p&gt;
&lt;p&gt;[assembly : AssemblyDelaySign(false)]&lt;br /&gt;
[assembly : AssemblyKeyFile(&amp;#8220;&amp;#8221;)]&lt;br /&gt;
[assembly :&amp;nbsp;AssemblyKeyName(&amp;#8220;&amp;#8221;)]  &lt;/p&gt;
&lt;p&gt;Which overwrite what gets pulled in from&amp;nbsp;GlobalAssemblyInfo.cs.  &lt;/p&gt;
&lt;p&gt;So you have to go through every project&amp;#8217;s AssemblyInfo.cs file and
remove those 3&amp;nbsp;lines.  &lt;/p&gt;
&lt;p&gt;Sigh. There&amp;#8217;s 23 projects in the Security section alone, which is sort
of the &lt;span style="font-style: italic;"&gt;sine qua non&lt;/span&gt;for using
the &lt;span class="caps"&gt;EL&lt;/span&gt; to begin with, for my&amp;nbsp;purposes.  &lt;/p&gt;
&lt;p&gt;Well, Caching, Configuration, Data, ExceptionHandling, and Logging are
also&amp;nbsp;useful.  &lt;/p&gt;
&lt;p&gt;One step at a&amp;nbsp;time.  &lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve gotten Logging to work. Unfortunately, every time it logs it throws
three error&amp;nbsp;messages:  &lt;/p&gt;
&lt;p&gt;&lt;span class="messagecontent"&gt;&lt;span style="font-style: italic;"&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Failed
to create instances of performance counter &amp;#8216;Distributor: # of Logs
Distributed/Sec&amp;#8217; - The requested Performance Counter is not a custom
counter, it has to be initialized as&amp;nbsp;ReadOnly..&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;For more information, see Help and
Support Center at&amp;nbsp;http://go.microsoft.com/fwlink/events.asp.&amp;#8221;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Failed to fire the &lt;span class="caps"&gt;WMI&lt;/span&gt; event
&amp;#8216;LoggingLogWrittenEvent&amp;#8217;. Exception: System.Exception: This schema for
this assembly has not been registered with &lt;span class="caps"&gt;WMI&lt;/span&gt;.&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;at
System.Management.Instrumentation.Instrumentation.Initialize(Assembly
assembly)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;at
System.Management.Instrumentation.Instrumentation.GetInstrumentedAssembly(Assembly
assembly)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;at
System.Management.Instrumentation.BaseEvent.Fire()&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;at
Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentedEvent.FireWmiEventCore(BaseEvent&amp;nbsp;baseEvent).&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;For more information, see Help and
Support Center at&amp;nbsp;http://go.microsoft.com/fwlink/events.asp.&amp;#8221;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;and  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Failed to create instances of
performance counter &amp;#8216;Client: # of Logs Written/Sec&amp;#8217; - The requested
Performance Counter is not a custom counter, it has to be initialized as&amp;nbsp;ReadOnly..&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;For more information, see Help and
Support Center at&amp;nbsp;http://go.microsoft.com/fwlink/events.asp.&amp;#8221;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Presumably these counters are installed as part of the &lt;span class="caps"&gt;EL&lt;/span&gt; service
installation, but going through the batch file yields for&amp;nbsp;logging:  &lt;/p&gt;
&lt;p&gt;@&lt;span class="caps"&gt;ECHO&lt;/span&gt;.&lt;br /&gt;
@&lt;span class="caps"&gt;ECHO&lt;/span&gt; &amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;br /&gt;
@&lt;span class="caps"&gt;ECHO&lt;/span&gt; Installing Services for the Logging and Instrumentation
Application Block&lt;br /&gt;
@&lt;span class="caps"&gt;ECHO&lt;/span&gt; &amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;br /&gt;
@&lt;span class="caps"&gt;ECHO&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;if Exist Microsoft.Practices.EnterpriseLibrary.Logging.dll installutil
%1 Microsoft.Practices.EnterpriseLibrary.Logging.dll&lt;br /&gt;
@if errorlevel 1 goto&amp;nbsp;:error  &lt;/p&gt;
&lt;p&gt;So I&amp;#8217;d like to break out whatever counters are needed so I can install
them on the webserver, and ideally, be able to script this installation
for production code on a production server with an Installer&amp;nbsp;project.  &lt;/p&gt;
&lt;p&gt;Although I&amp;#8217;m strongly tempted to just go back to using my ErrorHandling
class, which doesn&amp;#8217;t need anything installed&amp;nbsp;anywhere.  &lt;/p&gt;
&lt;p&gt;No, I&amp;#8217;ll persist in using the &lt;span class="caps"&gt;EL&lt;/span&gt;. I&amp;#8217;m sure there will be a payoff &amp;#8212;
like extending the Logging class to handle &lt;span class="caps"&gt;XML&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;Of course, to extend the &lt;span class="caps"&gt;EL&lt;/span&gt; one should be cognizant of all the Unit
Tests there built to ensure its continued functionality. So I need that
book on Test Driven Development real soon&amp;nbsp;now.  &lt;/p&gt;
&lt;p&gt;Well, at least I&amp;#8217;m not bored.&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;</summary><category term=".net"></category></entry><entry><title>Microsoft Security Awareness training</title><link href="http://adamgetchell.org/microsoft-security-awareness-training.html" rel="alternate"></link><updated>2007-09-22T23:41:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:microsoft-security-awareness-training.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.atrevido.net/blog/PermaLink.aspx?guid=256b6bb4-f6f4-43a5-985b-7fe5796b809c"&gt;This&lt;/a&gt;
is just too funny to pass&amp;nbsp;up.  &lt;/p&gt;
&lt;p&gt;So far, &lt;a href="http://windowssecrets.com/050127/#story1"&gt;malware&amp;#8217;s winning the war of
attrition&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Well, at least &lt;a href="http://www.microsoft.com/athome/security/spyware/software/default.mspx"&gt;Microsoft
Anti-Spyware&lt;/a&gt;
is going to be&amp;nbsp;free.  &lt;/p&gt;
&lt;p&gt;Too bad there&amp;#8217;s already &lt;a href="http://www.pcworld.com/resource/article/0,aid,119641,pg,1,RSS,RSS,00.asp"&gt;malware which targets
it&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;You do have a real hardware firewall, don&amp;#8217;t you? If not, there&amp;#8217;s no
reason why you shouldn&amp;#8217;t &amp;#8212; here&amp;#8217;s my &lt;a href="http://insecure.ucdavis.edu/OpenBSD/openbrick"&gt;OpenBSD
recipe&lt;/a&gt; that works
beautifully on inexpensive hardware, and has big-bucks features like
stateful filtering, source tracking, bandwidth queuing, &lt;span class="caps"&gt;NAT&lt;/span&gt;, &lt;span class="caps"&gt;OS&lt;/span&gt;
detection, adaptive state table timeouts, &lt;span class="caps"&gt;MAC&lt;/span&gt; address tagging (with
brconfig), macros and tables, and hardware failover capability. All for
the price of an &lt;a href="http://www.openbsd.org/orders.html"&gt;OpenBSD &lt;span class="caps"&gt;CD&lt;/span&gt;&lt;/a&gt; and
whatever hardware you run it&amp;nbsp;on.  &lt;/p&gt;
&lt;p&gt;(One of the firewalls I set up for a class C network was a Pentium 166
with &lt;span class="caps"&gt;32MB&lt;/span&gt; of &lt;span class="caps"&gt;RAM&lt;/span&gt;, and it mostly sat at 99% idle filtering a &lt;span class="caps"&gt;100MB&lt;/span&gt;
full-duplex &lt;span class="caps"&gt;LAN&lt;/span&gt;. OpenBSD has a very efficient network stack. When I&amp;#8217;ve
gone around to help setup OpenBSD firewalls for departments at &lt;span class="caps"&gt;UC&lt;/span&gt; Davis,
we mostly recycle leftover desktops that have been&amp;nbsp;replaced.)  &lt;/p&gt;
&lt;p&gt;Of course, to help deal with malware you&amp;#8217;ll also have to do egress
filtering (not just ingress filtering, where most rulesets stop), and as
always, keep your systems&amp;nbsp;patched.  &lt;/p&gt;
&lt;p&gt;But then, there&amp;#8217;s no such thing as a&amp;nbsp;panacea.  &lt;/p&gt;
&lt;p&gt;Did I also mention that pf rules are nearly&amp;nbsp;plain-language?  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.openbsd.org/faq/pf/index.html"&gt;pf&lt;/a&gt;&amp;nbsp;r0x0rs!&lt;/p&gt;</summary><category term="openbsd"></category></entry><entry><title>Enterprise Library authentication</title><link href="http://adamgetchell.org/enterprise-library-authentication.html" rel="alternate"></link><updated>2007-09-22T23:40:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:enterprise-library-authentication.html</id><summary type="html">&lt;p&gt;&lt;a href="http://weblogs.asp.net/drohrer/"&gt;Doug Rohrer&lt;/a&gt;, one of
&lt;a href="http://www.avanade.com/"&gt;Avanade&lt;/a&gt; guys who worked on the Enterprise
Library, has posted a fantastic End to End Enterprise Library project
which incorporates the &lt;span class="caps"&gt;EL&lt;/span&gt; into &lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; and Winforms&amp;nbsp;applications.  &lt;/p&gt;
&lt;p&gt;Using Collin Collier&amp;#8217;s wonderful &lt;a href="http://www.jtleigh.com/people/colin/software/CopySourceAsHtml/"&gt;Copy Source As
&lt;span class="caps"&gt;HTML&lt;/span&gt;&lt;/a&gt;
makes blogging the code much&amp;nbsp;easier.  &lt;/p&gt;
&lt;p&gt;Looking at Doug&amp;#8217;s work, we run into the common pattern of writing a base
page class which all asp.net pages inherit. Then he overrides the OnInit
function to kickstart&amp;nbsp;authentication.  &lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve been using an &lt;a href="http://support.microsoft.com/default.aspx?scid=kb;%5BLN%5D;Q307996"&gt;&lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; Http
Module&lt;/a&gt;
to trap OnAuthenticate, but this is an interesting approach. Here&amp;#8217;s
Dougs BasePage&amp;nbsp;class:  &lt;/p&gt;
&lt;div class="cf"&gt;

&lt;span class="cb1"&gt;using&lt;/span&gt; System;

&lt;span class="cb1"&gt;using&lt;/span&gt;
Microsoft.Practices.EnterpriseLibrary.Security;

&lt;span class="cb1"&gt;using&lt;/span&gt; SecCache =
Microsoft.Practices.EnterpriseLibrary.Security.Cache;

&lt;span class="cb1"&gt;using&lt;/span&gt;
Microsoft.Practices.EnterpriseLibrary.Configuration;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Web.Security;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Security.Principal;

&lt;span class="cb1"&gt;using&lt;/span&gt; EntLibCommonCSharp;

 

 

&lt;span class="cb1"&gt;namespace&lt;/span&gt; EntLibWebCSharp

{

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Summary description
for BasePage.&lt;/span&gt;

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

    &lt;span class="cb1"&gt;public&lt;/span&gt; &lt;span class="cb1"&gt;class&lt;/span&gt;
BasePage: System.Web.&lt;span class="caps"&gt;UI&lt;/span&gt;.Page

    {

 

&lt;span class="cb1"&gt;        \#region&lt;/span&gt; Private Variables

 

        &lt;span class="cb1"&gt;private&lt;/span&gt; IAuthenticationProvider
\_authenProvider;

        &lt;span class="cb1"&gt;private&lt;/span&gt; IAuthorizationProvider
\_authorProvider;

        &lt;span class="cb1"&gt;private&lt;/span&gt; IRolesProvider \_rolesProvider;

        &lt;span class="cb1"&gt;private&lt;/span&gt; ISecurityCacheProvider
\_secCacheProvider;

        &lt;span class="cb1"&gt;private&lt;/span&gt; IPrincipal \_principal;

        &lt;span class="cb1"&gt;private&lt;/span&gt;
EntLibCommonCSharp.AppConfigData \_config;

 

&lt;span class="cb1"&gt;        \#endregion&lt;/span&gt;

 

&lt;span class="cb1"&gt;        \#region&lt;/span&gt; Public Properties

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; An Enterprize
Library Authentication Provider instance. &lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Used to determine
if a user&amp;#8217;s credentials are valid.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; IAuthenticationProvider
AuthenProvider {

            &lt;span class="cb1"&gt;get&lt;/span&gt; {

                &lt;span class="cb1"&gt;if&lt;/span&gt; (&lt;span
class="cb1"&gt;null&lt;/span&gt;==\_authenProvider) {

                    \_authenProvider =
AuthenticationFactory.GetAuthenticationProvider();

                }

                &lt;span class="cb1"&gt;return&lt;/span&gt; \_authenProvider;

            }

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; An Enterprize
Library Authorization Provider instance. &lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Used to determine
if a user is permitted to perform a certain action.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; IAuthorizationProvider
AuthorProvider {

            &lt;span class="cb1"&gt;get&lt;/span&gt; {

                &lt;span class="cb1"&gt;if&lt;/span&gt; (&lt;span
class="cb1"&gt;null&lt;/span&gt;==\_authorProvider) {

                    \_authorProvider =
AuthorizationFactory.GetAuthorizationProvider();

                }

                &lt;span class="cb1"&gt;return&lt;/span&gt; \_authorProvider;

            }

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; An Enterprize
Library Roles Provider instance. &lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Used to retrieve
a principal object given an identity.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; IRolesProvider RolesProvider {

            &lt;span class="cb1"&gt;get&lt;/span&gt; {

                &lt;span class="cb1"&gt;if&lt;/span&gt; (&lt;span
class="cb1"&gt;null&lt;/span&gt;==\_rolesProvider) {

                    \_rolesProvider = RolesFactory.GetRolesProvider();

                }

                &lt;span class="cb1"&gt;return&lt;/span&gt; \_rolesProvider;

            }

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; An Enterprize
Library Security Cache Provider instance.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Used to store and
retrieve a principal object given a security token.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; ISecurityCacheProvider
SecCacheProvider {

            &lt;span class="cb1"&gt;get&lt;/span&gt; {

                &lt;span class="cb1"&gt;if&lt;/span&gt; (&lt;span
class="cb1"&gt;null&lt;/span&gt;==\_secCacheProvider) {

                    \_secCacheProvider =
SecurityCacheFactory.GetSecurityCacheProvider();

                }

                &lt;span class="cb1"&gt;return&lt;/span&gt; \_secCacheProvider;

            }

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; The current
principal&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; IPrincipal Principal {

            &lt;span class="cb1"&gt;get&lt;/span&gt; {

                &lt;span class="cb1"&gt;return&lt;/span&gt; \_principal;

            }

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Provides easy
access to configuration data in the application config file.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; AppConfigData Config {

            &lt;span class="cb1"&gt;get&lt;/span&gt; {

                &lt;span class="cb1"&gt;if&lt;/span&gt; (&lt;span
class="cb1"&gt;null&lt;/span&gt;==\_config) {

                    \_config =
(AppConfigData)ConfigurationManager.GetConfiguration(AppConfigManager.SectionName);

                }

                &lt;span class="cb1"&gt;return&lt;/span&gt; \_config;

            }

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Sets the
principal for this page request.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;param name="principal"\&gt;&lt;/span&gt;&lt;span class="cb3"&gt;The
principal to use for the rest of the request.&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/param\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;internal&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
SetPrincipal(IPrincipal principal) {

            \_principal = principal;

        }

 

 

&lt;span class="cb1"&gt;        \#endregion&lt;/span&gt;

 

        &lt;span class="cb1"&gt;public&lt;/span&gt; BasePage()

        {

            &lt;span class="cb3"&gt;// No constructor necessary&lt;/span&gt;

        }

 

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Fires at the
beginning of the page lifecycle.  Overriden here to retrieve principal
data from the&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Enterprise
Library Security Cache provider or, if unable, to redirect to he login
page.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; The Login.aspx
page will add the appropriate token via the &lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; forms authentication
cookie&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; if the user
successfully logs in.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;param name="e"\&gt;\&lt;/param\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;protected&lt;/span&gt; &lt;span
class="cb1"&gt;override&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
OnInit(EventArgs e) {

            &lt;span class="cb1"&gt;base&lt;/span&gt;.OnInit(e);

            &lt;span class="cb3"&gt;// Make sure to skip this step if you&amp;#8217;re
already on the login page&lt;/span&gt;

            &lt;span class="cb1"&gt;if&lt;/span&gt;
(ResolveUrl(&amp;#8220;\~/Login.aspx&amp;#8221;)!=Request.Url.AbsolutePath) {

                &lt;span class="cb1"&gt;try&lt;/span&gt; {

                    &lt;span class="cb3"&gt;// Load the principal from the
FormsAuthentication ticket information.&lt;/span&gt;

                    FormsAuthenticationTicket ticket =
FormsAuthentication.Decrypt((&lt;span
class="cb1"&gt;string&lt;/span&gt;)Request.Cookies[FormsAuthentication.FormsCookieName].Value);

                    GuidToken token = &lt;span class="cb1"&gt;new&lt;/span&gt;
GuidToken(&lt;span class="cb1"&gt;new&lt;/span&gt; System.Guid(ticket.UserData));

                    IPrincipal principal =
SecCacheProvider.GetPrincipal(token);

                    &lt;span class="cb1"&gt;if&lt;/span&gt; (&lt;span
class="cb1"&gt;null&lt;/span&gt;==principal) {

                        Response.Redirect(&amp;#8220;\~/Login.aspx&amp;#8221;);

                    } &lt;span class="cb1"&gt;else&lt;/span&gt; {

                        SetPrincipal(principal);

                    }

                } &lt;span class="cb1"&gt;catch&lt;/span&gt; (Exception) {

                    &lt;span class="cb3"&gt;// If we have any issues, redirect
to Login&lt;/span&gt;

                    Response.Redirect(ResolveUrl(&amp;#8220;\~/Login.aspx&amp;#8221;));

                }

            }

        }

 

 

    }

}

&lt;/div&gt;

&lt;p&gt;Cool&amp;nbsp;stuff!&lt;/p&gt;
&lt;/p&gt;</summary><category term=".net"></category></entry><entry><title>Fun with ASP.NET security and Windows 2003 SP1 breakage</title><link href="http://adamgetchell.org/fun-with-aspnet-security-and-windows.html" rel="alternate"></link><updated>2007-09-22T23:40:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:fun-with-aspnet-security-and-windows.html</id><summary type="html">&lt;p&gt;Problem: you want secure database access, using a connection string like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="cf"&gt;

&lt;span class="cb1"&gt;\&lt;&lt;/span&gt;&lt;span class="cb2"&gt;add&lt;/span&gt;&lt;span
class="cb3"&gt;&lt;/span&gt;&lt;span class="cb4"&gt;key&lt;/span&gt;&lt;span
class="cb1"&gt;=&amp;#8221;DatabaseConnection&amp;#8221;&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb4"&gt;value&lt;/span&gt;&lt;span class="cb1"&gt;=&amp;#8221;server=&lt;span class="caps"&gt;SERVER&lt;/span&gt;;Persist
Security Info=False;database=&lt;span class="caps"&gt;DATABASE&lt;/span&gt;;Integrated
Security=&lt;span class="caps"&gt;SSPI&lt;/span&gt;;&amp;#8221;/\&gt;&lt;/span&gt;

&lt;/div&gt;

&lt;p&gt;Solution: First, we&amp;#8217;re running &lt;span class="caps"&gt;IIS6&lt;/span&gt;.0. So we can set up a separate
Application Pool, and setup credentials for that application pool to&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;We &lt;span style="FONT-WEIGHT: bold;"&gt;don&amp;#8217;t&lt;/span&gt; want to use
Impersonation, because then our connection credentials will run as the
application user, which may be different for each request, which will
slow database access down because we won&amp;#8217;t be able to use database
connection&amp;nbsp;pooling.&lt;/p&gt;
&lt;p&gt;We &lt;span style="FONT-WEIGHT: bold;"&gt;don&amp;#8217;t&lt;/span&gt; want to use a domain
account, because exploiting that account gives a free ride (and
reconnaissance) to our entire&amp;nbsp;network.&lt;/p&gt;
&lt;p&gt;We &lt;span style="FONT-WEIGHT: bold;"&gt;do&lt;/span&gt; want to use a local
account, with minimal rights on the Windows 2003/&lt;span class="caps"&gt;IIS6&lt;/span&gt;.0 server. We can
then duplicate that account on the &lt;span class="caps"&gt;SQL&lt;/span&gt; server, assign it appropriate
rights to the databases we&amp;#8217;re using (and specifically, the stored
procedures), and then use pass-through&amp;nbsp;authentication.&lt;/p&gt;
&lt;p&gt;I used the &lt;span class="caps"&gt;ASPNET&lt;/span&gt; account (which will cause problems later, but they&amp;#8217;re
interesting ones), though the account really doesn&amp;#8217;t matter (i.e. I did
&lt;span style="FONT-WEIGHT: bold;"&gt;not&lt;/span&gt; use this account on our
production server, but another one like it.) I think it&amp;#8217;s better to live
dangerously on development boxes, to catch problems early. Of course,
that&amp;#8217;s not all. In order for the account to be able to startup an
application pool, it has to be a member of the IIS_WPG group. I didn&amp;#8217;t
find that anywhere in &lt;span class="caps"&gt;MSDN&lt;/span&gt; or the &lt;span class="caps"&gt;KB&lt;/span&gt; articles, but by&amp;nbsp;experimentation.&lt;/p&gt;
&lt;p&gt;So, pick an account, add it to the IIS_WPG group, create an application
pool running under that account, duplicate that account on your &lt;span class="caps"&gt;SQL&lt;/span&gt;
server, set permissions to the databases and stored procedures&amp;nbsp;desired.&lt;/p&gt;
&lt;p&gt;Voila,&amp;nbsp;right?&lt;/p&gt;
&lt;p&gt;Problem #2: You want to use the Enterprise Library Data Access
Application Block. So following the guidelines you write some code like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="cf"&gt;

Database authDB = DatabaseFactory.CreateDatabase(&amp;#8220;Authentication&amp;#8221;);

DBCommandWrapper dbCommandWrapper =
authDB.GetStoredProcCommandWrapper(&amp;#8220;usp\_LookupUserbyLoginID&amp;#8221;);

dbCommandWrapper.AddInParameter(&amp;#8220;@kerbID&amp;#8221;, System.Data.DbType.String,
requestUserID);

IDataReader reader = authDB.ExecuteReader(dbCommandWrapper);

&lt;span class="cb1"&gt;bool&lt;/span&gt; records = &lt;span class="cb1"&gt;false&lt;/span&gt;;

&lt;/div&gt;

&lt;p&gt;But get an error like this: &lt;font size="+0"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;em&gt;Security&amp;nbsp;Exception&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font face="Arial, Helvetica, Geneva, SunSans-Regular, sans-serif "&gt;&lt;strong&gt;Description:&lt;/strong&gt;
The application attempted to perform an operation not allowed by the
security policy. To grant this application the required permission
please contact your system administrator or change the application&amp;#8217;s
trust level in the configuration&amp;nbsp;file.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exception Details:&lt;/strong&gt; System.Security.SecurityException: Requested
registry access is not&amp;nbsp;allowed.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source&amp;nbsp;Error:&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;+&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;+
|     Line 157:    DBCommandWrapper dbCommandWrapper = authDB.GetStoredPro |
| cCommandWrapper(&amp;#8220;usp_LookupUserbyLoginID&amp;#8221;);                              |
|                                                                          |
|     Line 158:    dbCommandWrapper.AddInParameter(&amp;#8220;@kerbID&amp;#8221;, System.Data. |
| DbType.String, requestUserID);                                           |
|                                                                          |
|     Line 159:    IDataReader reader = authDB.ExecuteReader(dbCommandWrap |
| per);                                                                    |
|                                                                          |
|     Line 160:    bool records = false;                                   |
|                                                                          |
|     Line 161:                                                            |
|                                                                          |
| &lt;/code&gt;                                                                  |&amp;nbsp;+&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;+&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font face="Verdana"&gt;Source File:
&lt;/font&gt;&lt;/strong&gt;&amp;#92;Webdevel.caes.ucdavis.edu\wwwroot\$\EligibilityList\AuthenticationModule.cs&lt;strong&gt;&lt;font face="Verdana"&gt;
   Line: &lt;/font&gt;&lt;/strong&gt;159  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font face="Verdana"&gt;Stack Trace:&lt;/font&gt;&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;+&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;+
|     [SecurityException: Requested registry access is not allowed.]       |
|                                                                          |
|        Microsoft.Win32.RegistryKey.OpenSubKey(String name, Boolean writa |
| ble) +473                                                                |
|                                                                          |
|        System.Diagnostics.EventLog.CreateEventSource(String source, Stri |
| ng logName, String machineName, Boolean useMutex) +443                   |
|                                                                          |
|        System.Diagnostics.EventLog.WriteEntry(String message, EventLogEn |
| tryType type, Int32 eventID, Int16 category, Byte[] rawData) +347        |
|                                                                          |
|        System.Diagnostics.EventLog.WriteEntry(String message, EventLogEn |
| tryType type, Int32 eventID, Int16 category) +21                         |
|                                                                          |
|        System.Diagnostics.EventLog.WriteEntry(String message, EventLogEn |
| tryType type, Int32 eventID) +15                                         |
|                                                                          |
|        Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.Even |
| tLogger.Log(String message)                                              |
|                                                                          |
| &lt;/code&gt;                                                                  |&amp;nbsp;+&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;+&lt;/p&gt;
&lt;p&gt;&lt;/font&gt;&lt;/i&gt;&lt;span style="FONT-FAMILY: Arial,Helvetica,Geneva,SunSans-Regular,sans-serif;"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;font size="+0"&gt;&lt;!--StartFragment --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/h2&gt;
&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;If
you look at the Stack Trace, you can see the problem is with the
CreateEventSource() call. Even though you haven’t specified using the
Enterprise Library Logging Block, secretly it is still using
System.Diagnostics.EventLog as part of its setup.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Here’s an article which describes the
problem:&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;&lt;a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;329291"&gt;&lt;span class="caps"&gt;PRB&lt;/span&gt;: “Requested Registry Access Is
Not Allowed” Error Message When &lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; Application Tries to Write New
EventSource in the
EventLog&lt;/a&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Unfortunately, the solutions don’t
work. Solution #1, manually entering a registry key, didn’t work for
me. Solution #2, writing some code which calls CreateEventSource() also
doesn’t &lt;em&gt;quite&lt;/em&gt; work either.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;I say &lt;em&gt;quite&lt;/em&gt; because the issue is
that CreateEventSource() needs to be called by a user with
Administrative Rights. So what I did was create a project using my
ErrorHandler class (from &lt;a href="http://acgetchell.blogspot.com/2005/02/fun-with-microsofts-enterprise-library.html"&gt;Fun with Microsoft’s Enterprise
Library&lt;/a&gt;),
setup the project to run in App Pool #1 which runs using the &lt;span class="caps"&gt;ASPNET&lt;/span&gt;
account, grant that account Admin rights, do iisreset &amp;amp;&amp;amp; gpupdate
/force, open the project’s default web form thereby causing an event to
be written which calls the ErrorHandler class which calls
CreateEventSource(), and then go back and revoke admin rights on
&lt;span class="caps"&gt;ASPNET&lt;/span&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Unfortunately, this needs to be done
for every application which will call CreateEventSource() — unless you
want to leave &lt;span class="caps"&gt;ASPNET&lt;/span&gt; running as Administrator (&lt;strong&gt;very bad
idea!&lt;/strong&gt;).&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Inelegant, but it works. I’ve notified
Microsoft &lt;span class="caps"&gt;KB&lt;/span&gt; site of my findings; perhaps they’ll revise the article, or
show something more elegant.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Update: &lt;font face="Arial" size="2"&gt;This is also discussed in the
&lt;a href="http://www.gotdotnet.com/workspaces/customization/uploadedhtmlpage.aspx?FileID=ded67339-a081-489a-8d63-817323f31104&amp;amp;id=295a464a-6072-4e25-94e2-91be63527327"&gt;Enterprise Library
&lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;.
However, the solutions given there are 1) run the “Install Services”
script (why would you install Visual Studio on a server?) 2) use
installutil on the &lt;span class="caps"&gt;EL&lt;/span&gt; assemblies (perhaps that will work — I’ll have to
try it) or 3) remove all logging from the &lt;span class="caps"&gt;EL&lt;/span&gt; (which in my case I
want).&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Okay, we’ve got that problem taken
care of. We write our &lt;span class="caps"&gt;EL&lt;/span&gt; application and breathlessly open the default
page, only to find:&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;&lt;!--StartFragment --&gt;&lt;font face="Times New Roman" size="3"&gt; Server
Error in &amp;#8216;/EligibilityList&amp;#8217;&amp;nbsp;Application.  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;File or assembly name ko20f8cc.dll, or one of its dependencies, was not
found.&lt;br /&gt;
Description: An unhandled exception occurred during the execution of the
current web request. Please review the stack trace for more information
about the error and where it originated in the&amp;nbsp;code.  &lt;/p&gt;
&lt;p&gt;Exception Details: System.&lt;span class="caps"&gt;IO&lt;/span&gt;.FileNotFoundException: File or assembly
name ko20f8cc.dll, or one of its dependencies, was not&amp;nbsp;found.  &lt;/p&gt;
&lt;p&gt;Source&amp;nbsp;Error:  &lt;/p&gt;
&lt;p&gt;Line 119:      private bool Authorize(string requestUserID)&lt;br /&gt;
Line 120:      {&lt;br /&gt;
Line 121:         Database authDB =
DatabaseFactory.CreateDatabase(&amp;#8220;Authentication&amp;#8221;);&lt;br /&gt;
Line 122://         IDataReader dataReader;&lt;br /&gt;
Line 123:         DBCommandWrapper dbCommandWrapper =
authDB.GetStoredProcCommandWrapper(&amp;#8220;usp_LookupUserbyLoginID&amp;#8221;, new
SqlParameter(&amp;#8220;@kerbID&amp;#8221;, requestUserID)); &lt;/font&gt;&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;This was discussed in the
&lt;a href="http://www.gotdotnet.com/workspaces/messageboard/thread.aspx?id=295a464a-6072-4e25-94e2-91be63527327&amp;amp;threadid=ee840b95-2fb0-49c9-b888-26abd8268b98"&gt;GotDotNet&lt;/a&gt;
forums. The problem is this:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;&lt;a href="http://support.microsoft.com/default.aspx?scid=317012"&gt;Process and request identity in
&lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt;&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Behind the scenes the &lt;span class="caps"&gt;DAAB&lt;/span&gt; calls
XmlSerializer, which want to write a temporary assembly to run. &lt;span class="caps"&gt;ASPNET&lt;/span&gt;
(or the account you’re running under) doesn’t have access to the default
temp directory, C:\Windows\temp, so the assembly can’t be written and
the &lt;span class="caps"&gt;DAAB&lt;/span&gt; halts. Nice.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;To fix this, give the account the
Application Pool runs under &lt;strong&gt;Full&lt;/strong&gt; (that’s right, it needs to create
subdirectories) permissions to C:\Windows\temp.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;By the way, this use of XmlSerializer has
&lt;a href="http://www.gotdotnet.com/workspaces/messageboard/thread.aspx?id=295a464a-6072-4e25-94e2-91be63527327&amp;amp;threadid=528cc244-f686-458f-b837-c5e319995087"&gt;performance
implications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Finally, Enterprise Library is
installed, our code references it correctly, temporary assemblies can be
written locally, life is good.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;Then we install Windows Server 2003
Service Pack 1.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Arial"&gt;And instantly, our web pages return
the very lonely:&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;/p&gt;
&lt;h1&gt;&lt;font face="Arial"&gt;Service Unavailable&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&lt;font face="Arial"&gt;Looking at &lt;span class="caps"&gt;IIS&lt;/span&gt; Manager, you can see that the
Application Pool has been disabled. Looking in the System Log from Event
Viewer shows this:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="1"&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial"&gt;A failure was encountered while launching the process
serving application pool &amp;#8216;AppPool #1&amp;#8217;. The application pool has been
disabled.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial"&gt;For more information, see Help and Support Center at
&lt;/font&gt;&lt;a href="http://go.microsoft.com/fwlink/events.asp"&gt;&lt;font face="Arial"&gt;http://go.microsoft.com/fwlink/events.asp&lt;/font&gt;&lt;/a&gt;&lt;font face="Arial"&gt;.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Of course that link leads to no further
information.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;To cut to the chase, the problem is that
Windows Server 2003 &lt;span class="caps"&gt;SP1&lt;/span&gt; has revoked rights/permissions on the &lt;span class="caps"&gt;ASPNET&lt;/span&gt;
account, that cannot be restored even by placing it in the
Administrators group. The way to fix the problem is:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Go to the .&lt;span class="caps"&gt;NET&lt;/span&gt; Framework Folder (typically
c:\Windows\Microsoft.&lt;span class="caps"&gt;NET&lt;/span&gt;\Framework\v1.1.4322)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;aspnet_regiis -ua to uninstall the
framework&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;aspnet_regiis -i to reinstall the
framework&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;In &lt;span class="caps"&gt;IIS&lt;/span&gt; Manager:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Enable &lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; pages&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;In User manager (compmgmt.msc)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Set the &lt;span class="caps"&gt;ASPNET&lt;/span&gt; account with the password on
the &lt;span class="caps"&gt;SQL&lt;/span&gt; server, and as a member of IIS_WPG&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;In &lt;span class="caps"&gt;IIS&lt;/span&gt; Manager:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Set the Application pool to run under the
account with the password entered from the previous step&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;At the Run command:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;iisreset to reset &lt;span class="caps"&gt;IIS&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;gpupdate /force to ensure password
synchronization&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font face="Arial" size="4"&gt;Wasn’t that fun?&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial" size="2"&gt;Thank goodness Whidbey and Enterprise
Library v2.0 aren’t coming out until September.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term=".net"></category></entry><entry><title>Using Enterprise Library Logging</title><link href="http://adamgetchell.org/using-enterprise-library-logging.html" rel="alternate"></link><updated>2007-09-22T23:40:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:using-enterprise-library-logging.html</id><summary type="html">&lt;p&gt;To get logging working without pesky &lt;span class="caps"&gt;WMI&lt;/span&gt;/Performance counter errors on
&lt;span style="font-style: italic;"&gt;every&lt;/span&gt; logged&amp;nbsp;event:  &lt;/p&gt;
&lt;p&gt;Per &lt;a href="http://weblogs.asp.net/tomholl/archive/2005/02/18/376187.aspx#FeedBack"&gt;Tom Hollander&amp;#8217;s&amp;nbsp;weblog&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Go to the Logging project, Project Properties dialog for the Common
project, and under Configuration Properties\Build, find the Conditional
Compilation Properties property and remove ;&lt;span class="caps"&gt;USEWMI&lt;/span&gt;;&lt;span class="caps"&gt;USEPERFORMANCECOUNTER&lt;/span&gt;
for the build type you&amp;#8217;re interested in (ReleaseFinal, in this&amp;nbsp;case).  &lt;/p&gt;
&lt;p&gt;Ignore compile warnings about &lt;span class="caps"&gt;DB2&lt;/span&gt;&amp;nbsp;goop.  &lt;/p&gt;
&lt;p&gt;Delete any old project references and re-add reference to new version in
C:\Program Files\Microsoft Enterprise&amp;nbsp;Library\src\Logging\bin\ReleaseFinal.  &lt;/p&gt;
&lt;p&gt;Then add an appropriate using statement and use in&amp;nbsp;code:  &lt;/p&gt;
&lt;div class="cf"&gt;

&lt;span class="cb1"&gt;using&lt;/span&gt; System;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Collections;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.ComponentModel;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Data;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Drawing;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Web;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Web.SessionState;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Web.&lt;span class="caps"&gt;UI&lt;/span&gt;;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Web.&lt;span class="caps"&gt;UI&lt;/span&gt;.WebControls;

&lt;span class="cb1"&gt;using&lt;/span&gt; System.Web.&lt;span class="caps"&gt;UI&lt;/span&gt;.HtmlControls;

&lt;span class="cb1"&gt;using&lt;/span&gt;
Microsoft.Practices.EnterpriseLibrary.Logging;

&lt;span class="cb1"&gt;using&lt;/span&gt;
Microsoft.Practices.EnterpriseLibrary.Logging.Tracing;

 

&lt;span class="cb1"&gt;namespace&lt;/span&gt; &lt;span class="caps"&gt;CAESDO&lt;/span&gt;

{

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Summary description
for WebForm1.&lt;/span&gt;

    &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

    &lt;span class="cb1"&gt;public&lt;/span&gt; &lt;span class="cb1"&gt;class&lt;/span&gt;
DefaultPage : System.Web.&lt;span class="caps"&gt;UI&lt;/span&gt;.Page

    {

        &lt;span class="cb1"&gt;private&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
Page\_Load(&lt;span class="cb1"&gt;object&lt;/span&gt; sender, System.EventArgs e)

        {

            &lt;span class="cb3"&gt;// Put user code to initialize the page
here&lt;/span&gt;

            LogEntry logEntry = &lt;span class="cb1"&gt;new&lt;/span&gt; LogEntry();

            logEntry.Message = &amp;#8220;Starting up the application&amp;#8221;;

            Logger.Write(logEntry);

 

            &lt;span class="cb3"&gt;// Now this is cool! Tracing flow of code
through application&lt;/span&gt;

            &lt;span class="cb3"&gt;// and it was simple to add an EmailAlert
with an EmailSink&lt;/span&gt;

 

            &lt;span class="cb1"&gt;using&lt;/span&gt; (&lt;span class="cb1"&gt;new&lt;/span&gt;
Tracer(&amp;#8220;Trace&amp;#8221;))

            {

                Logger.Write(&amp;#8220;Hello world&amp;#8221;);

                Logger.Write(&amp;#8220;Hello by e-mail&amp;#8221;,
&amp;#8220;EmailAlerts&amp;#8221;,5,3000,Microsoft.Practices.EnterpriseLibrary.Logging.Severity.Information,
&amp;#8220;An e-mail message logging all kinds of stuff&amp;#8221;);

            }

 

        }

 

&lt;span class="cb1"&gt;        \#region&lt;/span&gt; Web Form Designer generated
code

        &lt;span class="cb1"&gt;override&lt;/span&gt; &lt;span
class="cb1"&gt;protected&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
OnInit(EventArgs e)

        {

            &lt;span class="cb3"&gt;//&lt;/span&gt;

            &lt;span class="cb3"&gt;// &lt;span class="caps"&gt;CODEGEN&lt;/span&gt;: This call is required by the
&lt;span class="caps"&gt;ASP&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt; Web Form Designer.&lt;/span&gt;

            &lt;span class="cb3"&gt;//&lt;/span&gt;

            InitializeComponent();

            &lt;span class="cb1"&gt;base&lt;/span&gt;.OnInit(e);

        }

 

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;summary\&gt;&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; Required method
for Designer support - do not modify&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt; the contents of
this method with the code editor.&lt;/span&gt;

        &lt;span class="cb2"&gt;///&lt;/span&gt;&lt;span class="cb3"&gt;&lt;/span&gt;&lt;span
class="cb2"&gt;\&lt;/summary\&gt;&lt;/span&gt;

        &lt;span class="cb1"&gt;private&lt;/span&gt; &lt;span class="cb1"&gt;void&lt;/span&gt;
InitializeComponent()

        {   

            &lt;span class="cb1"&gt;this&lt;/span&gt;.Load += &lt;span
class="cb1"&gt;new&lt;/span&gt; System.EventHandler(&lt;span
class="cb1"&gt;this&lt;/span&gt;.Page\_Load);

        }

&lt;span class="cb1"&gt;        \#endregion&lt;/span&gt;

    }

}

&lt;/div&gt;

&lt;p&gt;&lt;span style="font-style: italic;"&gt;Voila!&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;It&amp;#8217;d sure make it easier to post code to my weblog if VisualStudio 2005
included
&lt;a href="http://www.jtleigh.com/people/colin/software/CopySourceAsHtml/"&gt;CopySourceAsHtml&lt;/a&gt;
functionality. This is a great application, too bad it doesn&amp;#8217;t work for
me. I seem to have uncovered the first interaction between &lt;span class="caps"&gt;CSAH&lt;/span&gt; and a
trial VisualPerl installation that won&amp;#8217;t&amp;nbsp;uninstall.  &lt;/p&gt;
&lt;p&gt;Par for the&amp;nbsp;course.  &lt;/p&gt;
&lt;p&gt;Although, I&amp;#8217;ve suggested to the Visual Studio 2005 guys that they add
this&amp;nbsp;feature.  &lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;P.S.&lt;/span&gt; Collin worked to fix &lt;span class="caps"&gt;CSAH&lt;/span&gt;, and I nuked and reinstalled my system,
including Visual Studio 2003.&lt;span class="caps"&gt;NET&lt;/span&gt;. That seems to have done the&amp;nbsp;trick.&lt;/p&gt;
&lt;/p&gt;</summary><category term=".net"></category></entry><entry><title>Beginning String Theory</title><link href="http://adamgetchell.org/beginning-string-theory.html" rel="alternate"></link><updated>2007-09-22T23:39:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:beginning-string-theory.html</id><summary type="html">&lt;p&gt;Okay, I’ve been posting enough about my day&amp;nbsp;job.&lt;/p&gt;
&lt;p&gt;By night I’m a physics graduate student. Well, my work lets me go to
class during the day, but (when I’m productive) night and
weekend minutes are for physics (sounds like a mobile phone&amp;nbsp;commercial).&lt;/p&gt;
&lt;p&gt;I’m currently tackling String Theory — we finally have a graduate course
at &lt;span class="caps"&gt;UCD&lt;/span&gt; after my petition to start one last year. Great stuff! The whole
reason I wanted to study physics to begin with. It’s being taught by
Professor John March-Russell, visiting us from&amp;nbsp;Oxford.&lt;/p&gt;
&lt;p&gt;Some great material on &lt;a href="http://users.ox.ac.uk/~ball0402/teaching/lectures.html"&gt;Philosophy of Physics by Oliver
Pooley&lt;/a&gt;: I found
it while reviewing general covariance. Of particular relevance is his
lecture on &lt;a href="http://users.ox.ac.uk/~ball0402/teaching/handout4.pdf"&gt;General Covariance and gauge
theories&lt;/a&gt;, which
helped to clarify the muddled thoughts I had running in my&amp;nbsp;head.&lt;/p&gt;
&lt;p&gt;Paul Ginsparg’s review of &lt;a href="http://arxiv.org/PS_cache/hep-th/pdf/9108/9108028.pdf"&gt;Applied Conformal Field
Theory&lt;/a&gt; posted on
his brain-child, &lt;a href="http://arxiv.org/"&gt;arxiv.org&lt;/a&gt;. Necessary material
since I learned the deep-connections between Conformal Field Theory in
2d and string theory are what tell us so much about 2d objects like
strings propagating along a&amp;nbsp;world-sheet.&lt;/p&gt;
&lt;p&gt;Belavin, Polyakov, and Zamolodchikov’s classic article
“&lt;!--StartFragment --&gt;&lt;span class="caps"&gt;INFINITE&lt;/span&gt; &lt;span class="caps"&gt;CONFORMAL&lt;/span&gt; &lt;span class="caps"&gt;SYMMETRY&lt;/span&gt; &lt;span class="caps"&gt;IN&lt;/span&gt; &lt;span class="caps"&gt;TWO&lt;/span&gt;-&lt;span class="caps"&gt;DIMENSIONAL&lt;/span&gt;
&lt;span class="caps"&gt;QUANTUM&lt;/span&gt; &lt;span class="caps"&gt;FIELD&lt;/span&gt; &lt;span class="caps"&gt;THEORY&lt;/span&gt;” unfortunately isn’t on arxiv, and right now our
electronic journals aren’t responding, so I may have to track down
Nucl.Phys.B241:333–380,1984 on actual&amp;nbsp;paper.&lt;/p&gt;
&lt;p&gt;Well, this was fun but I should go back to reviewing my&amp;nbsp;notes.&lt;/p&gt;
&lt;/p&gt;</summary><category term="string theory"></category></entry><entry><title>Signing and Installing the EnterpriseLibrary in the GAC</title><link href="http://adamgetchell.org/signing-and-installing.html" rel="alternate"></link><updated>2007-09-22T23:39:00-07:00</updated><author><name>Adam Getchell</name></author><id>tag:adamgetchell.org,2007-09-22:signing-and-installing.html</id><summary type="html">&lt;p&gt;If you want to know how to do this, the gory details are
&lt;a href="http://practices.gotdotnet.com/messageboard/thread.aspx?id=295a464a-6072-4e25-94e2-91be63527327&amp;amp;mbid=12e6b3c0-1261-461b-b86d-eff86af3939d&amp;amp;threadid=cd6a5007-bccd-4802-83a4-b4940d72088c"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term=".net"></category></entry></feed>